% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/solve_model.R
\name{solve_model}
\alias{solve_model}
\title{Solve_model}
\usage{
solve_model(chem.name = NULL, chem.cas = NULL, times = NULL,
  parameters = NULL, model = NULL, route = "oral", dosing = NULL,
  days = 10, tsteps = 4, initial.values = NULL, plots = F,
  monitor.vars = NULL, suppress.messages = F, species = "Human",
  output.units = "uM", method = "lsoda", rtol = 1e-08,
  atol = 1e-12, default.to.human = F, recalc.blood2plasma = F,
  recalc.clearance = F, adjusted.Funbound.plasma = T, regression = T,
  restrictive.clearance = T, minimum.Funbound.plasma = 1e-04, ...)
}
\arguments{
\item{chem.name}{Either the chemical name, CAS number, or the parameters
must be specified.}

\item{chem.cas}{Either the chemical name, CAS number, or the parameters must
be specified.}

\item{times}{Optional time sequence for specified number of days. Dosing
sequence begins at the beginning of times.}

\item{parameters}{List of chemical parameters, as output by 
parameterize_pbtk function. Overrides chem.name and chem.cas.}

\item{model}{Specified model to use in simulation: "pbtk", "3compartment",
"3compartmentss", "1compartment", "schmitt", ...}

\item{route}{String specification of route of exposure for simulation:
"oral", "iv", "inhalation", ...}

\item{dosing}{List of dosing metrics used in simulation, which must include
the general entries with names "initial.dose", "doses.per.day", 
"daily.dose", and "dosing.matrix". The "dosing.matrix" is used for more
precise dose regimen specification, and is either a vector of dosing times
or a matrix consisting of two columns or rows named "time" and "dose"
containing the time and amount, in mg/kg BW, of each dose. 
Minimal usage case of all entries but "initial.dose" set to NULL in value.}

\item{days}{Simulated period. Default 10 days.}

\item{tsteps}{The number of time steps per hour. Default of 4.}

\item{initial.values}{Vector containing the initial concentrations or
amounts of the chemical in specified tissues with units corresponding to
output.units.  Defaults are zero.}

\item{plots}{Plots all outputs if true.}

\item{suppress.messages}{Whether or not the output message is suppressed.}

\item{species}{Species desired (either "Rat", "Rabbit", "Dog", "Mouse", or
default "Human").}

\item{output.units}{Desired units (either "mg/L", "mg", "umol", or default
"uM").}

\item{method}{Method used by integrator (deSolve).}

\item{rtol}{Argument passed to integrator (deSolve).}

\item{atol}{Argument passed to integrator (deSolve).}

\item{default.to.human}{Substitutes missing animal values with human values
if true (hepatic intrinsic clearance or fraction of unbound plasma).}

\item{recalc.blood2plasma}{Recalculates the ratio of the amount of chemical
in the blood to plasma using the input parameters, calculated with
hematocrit, Funbound.plasma, and Krbc2pu.}

\item{recalc.clearance}{Recalculates the the hepatic clearance
(Clmetabolism) with new million.cells.per.gliver parameter.}

\item{adjusted.Funbound.plasma}{Uses adjusted Funbound.plasma when set to
TRUE along with partition coefficients calculated with this value.}

\item{regression}{Whether or not to use the regressions in calculating
partition coefficients.}

\item{restrictive.clearance}{Protein binding not taken into account (set to
1) in liver clearance if FALSE.}

\item{...}{Additional arguments passed to the integrator.}

\item{iv.dose}{Simulates a single i.v. dose if true.}
}
\value{
A matrix of class deSolve with a column for time(in days), each
compartment, the area under the curve, and plasma concentration and a row
for each time point.
}
\description{
solve_model's arguments prepare an ode system for numerical solution over
time of the amounts or concentrations (uM) of chemical in the different
bodily compartments of a given available species (either "Rat", "Rabbit",
"Dog", "Mouse", or default "Human").
}
\details{
At a minimum, a chemical identifier (whether name, CAS number, or other
chemical parameterization), model system of interest ("pbtk",
"3compartment", "3compartmentss", "1compartment", "schmitt", ...), and
dosing regimen must be provided for solve_model to run its toxicokinetic
simulations. See 'dosing' argument listing below for breakdown of how to
specify dose (in terms of route of administration, frequency, and quantity)

Note that the model parameters have units of hours while the model output is
in days.

The compartments used in the "pbtk" model are the gutlumen, gut, liver, 
kidneys, veins, arteries, lungs, and the rest of the body. The extra
compartments include the amounts or concentrations metabolized by
the liver and excreted by the kidneys through the tubules.

AUC is the area under the curve of the plasma concentration.

Model parameters are named according to the following convention:
\tabular{lrrrr}{
prefix \tab suffix \tab Meaning \tab units \cr
K \tab \tab Partition coefficient for tissue to free plasma \ tab unitless \cr
V \tab \tab Volume \tab L \cr
Q \tab \tab Flow \tab L/h \cr
k \tab \tab Rate \tab 1/h \cr
\tab c \tab Parameter is proportional to body weight \tab 1 / kg for volumes
and 1/kg^(3/4) for flows \cr}

When species is specified but chemical-specific in vitro data are not
available, the function uses the appropriate physiological data (volumes and
flows) but default.to.human = TRUE must be used to substitute human
fraction unbound, partition coefficients, and intrinsic hepatic clearance.
}
\examples{


solve_pbtk(chem.name='Bisphenol-A',dose=.5,days=1,doses.per.day=2,tsteps=2)
out <- solve_pbtk(chem.name='bisphenola',dose=0,output.units='mg', 
                  plots=TRUE,initial.values=c(Agut=200))
params <- parameterize_pbtk(chem.cas="80-05-7")
solve_pbtk(parameters=params)
                  
\dontrun{
parameters <- parameterize_pbtk(chem.name = "triclosan", species = "rat")
parameters["Funbound.plasma"] <- 0.1
out <- solve_pbtk(parameters=parameters)

library("ggplot2")
out <- solve_pbtk(chem.name = "Bisphenol A", days = 50, doses.per.day = 3)
plot.data <- as.data.frame(out)
css <- calc_analytic_css(chem.name = "Bisphenol A")
c.vs.t <- ggplot(plot.data,aes(time, Cplasma)) + geom_line() +
geom_hline(yintercept = css) + ylab("Plasma Concentration (uM)") +
xlab("Day") + theme(axis.text = element_text(size = 16), axis.title =
element_text(size = 16), plot.title = element_text(size = 17)) +
ggtitle("Bisphenol A")
print(c.vs.t)
}

}
\references{
Pearce, Robert G., et al. "Httk: R package for high-throughput
toxicokinetics." Journal of statistical software 79.4 (2017): 1.
}
\author{
John Wambaugh and Robert Pearce
}
\keyword{Solve}

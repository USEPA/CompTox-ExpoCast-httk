
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # source("L:/Lab/NCCT_ExpoCast/ExpoCast2019/HTTKDataTable/load_package_data_tables-030719.R")
> # Get rid of anything in the workspace:
> rm(list=ls()) 
> 
> SCRIPT.VERSION <- "GHAug2020"
> 
> library(reshape)
Warning message:
package 'reshape' was built under R version 4.0.5 
> library(gdata)
gdata: read.xls support for 'XLS' (Excel 97-2004) files ENABLED.

gdata: read.xls support for 'XLSX' (Excel 2007+) files ENABLED.

Attaching package: 'gdata'

The following object is masked from 'package:stats':

    nobs

The following object is masked from 'package:utils':

    object.size

The following object is masked from 'package:base':

    startsWith

Warning message:
package 'gdata' was built under R version 4.0.4 
> library(xlsx)
Warning message:
package 'xlsx' was built under R version 4.0.5 
> source("add_chemtable.R")
> 
> 
> #
> # CREATE TABLES physiology.data and tissue.data
> #
> PKandTISSUEDATAFILE <- "pkdata.xlsx"
> 
> physiology.data <- read.xls(PKandTISSUEDATAFILE,
+   sheet="Basic PK",
+   stringsAsFactors=FALSE)[1:16,]
> # Make sure that all the values are numerical:
> for (this.col in 3:dim(physiology.data)[2])
+   physiology.data[,this.col] <- as.numeric(physiology.data[,this.col])
> # Write to text so Git can track changes:
> write.table(physiology.data,
+   file="Basic-Physiology.txt",
+   row.names=F,
+   sep="\t")
>   
> flowdata <- read.xls(PKandTISSUEDATAFILE,
+   sheet="Flows",
+   stringsAsFactors=FALSE,
+   skip=1)[1:19,]
> write.table(flowdata,
+   file="Tissue-Flows.txt",
+   row.names=F,
+   sep="\t")
> 
> densitydata <- read.xls(PKandTISSUEDATAFILE,
+   sheet="Human Density",
+   stringsAsFactors=FALSE)[1:27,]
> write.table(flowdata,
+   file="Tissue-Density.txt",
+   row.names=F,
+   sep="\t")
>   
> percentBWdata <- read.xls(PKandTISSUEDATAFILE,
+   sheet="Percent BW",
+   stringsAsFactors=FALSE,
+   skip=2)[1:20,]
> write.table(percentBWdata,
+   file="Tissue-PercentBW.txt",
+   row.names=F,
+   sep="\t")
>   
> tissuevolflowdata <- read.xls(PKandTISSUEDATAFILE,
+   sheet="VolumeFlow",
+   stringsAsFactors=FALSE)
> tissuevolflowdata <- subset(tissuevolflowdata,Species!="")[,c(
+   "Tissue",
+   "Species",
+   "Volume..L.kg.",
+   "Reference",
+   "Blood.Flow..ml.min.kg..3.4..",
+   "Reference.1")]
> colnames(tissuevolflowdata) <- c(
+   "Tissue",
+   "Species",
+   "Vol (L/kg)",
+   "Vol Reference",
+   "Flow (mL/min/kg^(3/4))",
+   "Flow Reference")
> for (this.col in c("Vol (L/kg)","Flow (mL/min/kg^(3/4))")) 
+   tissuevolflowdata[,this.col] <- as.numeric(tissuevolflowdata[,this.col])
> # Write to text so Git can track changes:
> write.table(tissuevolflowdata,
+   file="Tissue-Volumes-Flows.txt",
+   row.names=F,
+   sep="\t")
>   
> tissuecompdata <- read.xls(PKandTISSUEDATAFILE,
+   sheet="TissueComp",
+   stringsAsFactors=FALSE,
+   skip=1)
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
> tissuecompdata <- subset(tissuecompdata,Species!="")
> tissuecompdata <- subset(tissuecompdata,!is.na(Cells))
> colnames(tissuecompdata) <- c(
+   "Tissue",
+   "Species",
+   "Reference",
+   "Fcell",
+   "Fint",
+   "FWc",
+   "FLc",
+   "FPc",
+   "Fn_Lc",
+   "Fn_PLc"
+   ,"Fa_PLc"
+   ,"pH")
> for (this.col in c(
+   "Fcell",
+   "Fint",
+   "FWc",
+   "FLc",
+   "FPc",
+   "Fn_Lc",
+   "Fn_PLc",
+   "Fa_PLc",
+   "pH")) 
+   tissuecompdata[,this.col] <- as.numeric(tissuecompdata[,this.col])
> # Write to text so Git can track changes:
> write.table(tissuevolflowdata,
+   file="Tissue-Composition.txt",
+   row.names=F,
+   sep="\t")
>   
> tissuedata1 <- melt(tissuecompdata,id.vars=c("Tissue","Species","Reference"))
> tissuedata2 <- melt(tissuevolflowdata[,c("Tissue","Species","Vol (L/kg)","Vol Reference")],id.vars=c("Tissue","Species","Vol Reference"))  
> colnames(tissuedata2)[3] <- "Reference"
> tissuedata3 <- melt(tissuevolflowdata[,c("Tissue","Species","Flow (mL/min/kg^(3/4))","Flow Reference")],id.vars=c("Tissue","Species","Flow Reference"))  
> colnames(tissuedata3)[3] <- "Reference"
> tissue.data <- rbind(tissuedata1,tissuedata2,tissuedata3)      
> tissue.data$Tissue <- tolower(tissue.data$Tissue)
> 
> #
> # END TABLES physiology.data and tissue.data
> #
> 
> 
> 
> 
> #
> # CREATE TABLE chem.physical_and_invitro.data 
> #
> 
> #Table CLint units are uL/min/10^6 cells:
> Wetmore.tables <- read.xls("PublishedRawDataTables.xlsx",stringsAsFactors=F,skip=2)
> colnames(Wetmore.tables) <- c("Compound","CAS","Reference","Species","Clint.1","pValue.1","Clint.10","pValue.10","Fub.1","Fub.10")
> Wetmore.tables[Wetmore.tables[,"pValue.1"]=="&lt; 0.0001","pValue.1"] <- "0.00009"
> Wetmore.tables[Wetmore.tables[,"pValue.10"]=="&lt; 0.0001","pValue.10"] <- "0.00009"
> Wetmore.tables[,"pValue.10"] <- as.numeric(Wetmore.tables[,"pValue.10"])
Warning message:
NAs introduced by coercion 
> Wetmore.tables[,"pValue.1"] <- as.numeric(Wetmore.tables[,"pValue.1"])
Warning message:
NAs introduced by coercion 
> #Wetmore 2012 CAS for pyrithobac and not the pyrithobac salt used in ToxCast:
> Wetmore.tables[Wetmore.tables$CAS=="123342-93-8","CAS"] <- "123343-16-8"
> Wetmore.tables[Wetmore.tables$Fub.10=="","Fub.10"] <- 0
> 
> chem.prop <- add_chemtable(Wetmore.tables, data.list=list(
+                Reference="Reference",
+                CAS="CAS",
+                Compound="Compound",
+                Species="Species",
+                Clint="Clint.1",
+                Clint.pvalue="pValue.1",
+                Funbound.plasma="Fub.10"))
There were 50 or more warnings (use warnings() to see the first 50)
>                
> # overwrite 0 bpa value            
> rat.bpa <- subset(Wetmore.tables,CAS == '80-05-7' & Species=='Rat')
> chem.prop <- add_chemtable(rat.bpa, current.table=chem.prop,
+                data.list=list(
+                Reference="Reference",
+                CAS="CAS",
+                Compound="Compound",
+                Species="Species",
+                Clint="Clint.10",
+                Clint.pvalue="pValue.10"),
+                overwrite=T)                  
> 
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names All.Species
741-58-2 Bensulide 741-58-2         TRUE          Bensulide   Human|Rat
         Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
741-58-2       250.3            0.00089                 Wetmore 2012
         Human.Clint.Reference Human.Funbound.plasma
741-58-2          Wetmore 2012                 0.006
         Human.Funbound.plasma.Reference Rat.Clint Rat.Clint.pValue
741-58-2                    Wetmore 2012     37.52               NA
         Rat.Clint.pValue.Reference Rat.Clint.Reference Rat.Funbound.plasma
741-58-2                       <NA>        Wetmore 2013               0.008
         Rat.Funbound.plasma.Reference
741-58-2                  Wetmore 2013
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> #
> 
> WetmorePhaseII.fup.table <- read.table("Wetmore2015.fup.table.txt",
+   stringsAsFactors=F,
+   fill=T,
+   header=T,
+   sep="\t",
+   quote = "",
+   comment.char = "")
> WetmorePhaseII.fup.table$X10.mM[WetmorePhaseII.fup.table$X10.mM>100] <- 100
> WetmorePhaseII.fup.table$X10.mM <- as.numeric(WetmorePhaseII.fup.table$X10.mM)/100
> #There were a couple of salts in this data set, let's replicate them as acids:
> salt <- subset(WetmorePhaseII.fup.table,CAS=="2795-39-3")
> salt$CAS <- "1763-23-1"
> salt$Name <- "Perfluorooctanesulfonic acid"
> WetmorePhaseII.fup.table <- rbind(WetmorePhaseII.fup.table,salt)
> salt <- subset(WetmorePhaseII.fup.table,CAS=="29420-49-3")
> salt$CAS <- "375-73-5"
> salt$Name <- "Perfluorobutanesulfonic acid"
> WetmorePhaseII.fup.table <- rbind(WetmorePhaseII.fup.table,salt)
> salt <- subset(WetmorePhaseII.fup.table,CAS=="2795-39-3")
> salt$CAS <- "3825-26-1"
> salt$Name <- "Perfluorooctanoic acid"
> WetmorePhaseII.fup.table <- rbind(WetmorePhaseII.fup.table,salt)
> salt <- subset(WetmorePhaseII.fup.table,CAS=="3871-99-6")
> salt$CAS <- "355-46-4"
> salt$Name <- "Perfluorohexanesulfonic acid"
> WetmorePhaseII.fup.table <- rbind(WetmorePhaseII.fup.table,salt)
> chem.prop <- add_chemtable(WetmorePhaseII.fup.table,
+                species="Human",
+                reference="Wetmore 2015",
+                current.table=chem.prop,
+                data.list=list(
+                  CAS="CAS",
+                  Compound="Name",
+                  Funbound.plasma="X10.mM"),overwrite=T)
There were 50 or more warnings (use warnings() to see the first 50)
>                  
> WetmorePhaseII.clint.table <- read.table("Wetmore2015.clint.table.txt",
+   stringsAsFactors=F,
+   fill=T,
+   header=T,
+   sep="\t",
+   quote = "",
+   comment.char = "")
> WetmorePhaseII.clint.table <- subset(WetmorePhaseII.clint.table,Conc.=="1 uM")
> WetmorePhaseII.clint.table[,"P.value"] <-as.numeric(gsub("< ","",WetmorePhaseII.clint.table[,"P.value"]))
> WetmorePhaseII.clint.table[,"Adj.Cl"] <-as.numeric(WetmorePhaseII.clint.table[,"Adj.Cl"])
Warning message:
NAs introduced by coercion 
> #There were a couple of salts in this data set, let's replicate them as acids:
> salt <- subset(WetmorePhaseII.clint.table,CAS=="2795-39-3")
> salt$CAS <- "1763-23-1"
> salt$Name <- "Perfluorooctanesulfonic acid"
> WetmorePhaseII.clint.table <- rbind(WetmorePhaseII.clint.table,salt)
> salt <- subset(WetmorePhaseII.clint.table,CAS=="29420-49-3")
> salt$CAS <- "375-73-5"
> salt$Name <- "Perfluorobutanesulfonic acid"
> WetmorePhaseII.clint.table <- rbind(WetmorePhaseII.clint.table,salt)
> salt <- subset(WetmorePhaseII.clint.table,CAS=="2795-39-3")
> salt$CAS <- "3825-26-1"
> salt$Name <- "Perfluorooctanoic acid"
> WetmorePhaseII.clint.table <- rbind(WetmorePhaseII.clint.table,salt)
> salt <- subset(WetmorePhaseII.clint.table,CAS=="3871-99-6")
> salt$CAS <- "355-46-4"
> salt$Name <- "Perfluorohexanesulfonic acid"
> WetmorePhaseII.clint.table <- rbind(WetmorePhaseII.clint.table,salt)
> chem.prop <- add_chemtable(WetmorePhaseII.clint.table,                                        
+                species="Human",
+                reference="Wetmore 2015",
+                current.table=chem.prop,
+                data.list=list(
+                  CAS="CAS",
+                  Compound="Name",
+                  Clint="Adj.Cl",
+                  Clint.pvalue="P.value"))                 
Warning message:
In CAS.checksum(this.CAS) : NAs introduced by coercion
> 
> 
> 
> 
> Obach.table <- read.xls("Obach1999.xlsx",stringsAsFactors=F,skip=1)
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
> #Wrong CAS for Diazepam:
> Obach.table[Obach.table$CAS=="53320-84-6","CAS"] <- "439-14-5"
> 
> chem.prop <- add_chemtable(Obach.table, current.table=chem.prop, species="Human",reference="Obach 1999",data.list=list(
+                CAS="CAS",
+                Compound="Compound",
+                Rblood2plasma="Blood.to.Plasma.Ratio",
+                Funbound.plasma="Fraction.Unbound.in.Plasma"))
There were 27 warnings (use warnings() to see them)
> 
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names All.Species
741-58-2 Bensulide 741-58-2         TRUE          Bensulide   Human|Rat
         Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
741-58-2       250.3            0.00089                 Wetmore 2012
         Human.Clint.Reference Human.Funbound.plasma
741-58-2          Wetmore 2012                 0.006
         Human.Funbound.plasma.Reference Human.Rblood2plasma
741-58-2                    Wetmore 2012                  NA
         Human.Rblood2plasma.Reference Rat.Clint Rat.Clint.pValue
741-58-2                          <NA>     37.52               NA
         Rat.Clint.pValue.Reference Rat.Clint.Reference Rat.Funbound.plasma
741-58-2                       <NA>        Wetmore 2013               0.008
         Rat.Funbound.plasma.Reference
741-58-2                  Wetmore 2013
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> Jones.table <- read.xls("Jones2002.xlsx",stringsAsFactors=F)
> chem.prop <- add_chemtable(Jones.table, current.table=chem.prop,species="Human",reference="Jones 2002",data.list=list(
+                CAS="CAS",
+                Compound="Compouund",
+                pKa_Donor="pKa"))
Warning messages:
1: In CAS.checksum(this.CAS) : NAs introduced by coercion
2: In CAS.checksum(this.CAS) : NAs introduced by coercion
3: In CAS.checksum(this.CAS) : NAs introduced by coercion
4: In CAS.checksum(this.CAS) : NAs introduced by coercion
5: In CAS.checksum(this.CAS) : NAs introduced by coercion
6: In CAS.checksum(this.CAS) : NAs introduced by coercion
7: In CAS.checksum(this.CAS) : NAs introduced by coercion
8: In CAS.checksum(this.CAS) : NAs introduced by coercion
9: In CAS.checksum(this.CAS) : NAs introduced by coercion
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names pKa_Donor
741-58-2 Bensulide 741-58-2         TRUE          Bensulide      <NA>
         pKa_Donor.Reference All.Species Human.Clint Human.Clint.pValue
741-58-2                <NA>   Human|Rat       250.3            0.00089
         Human.Clint.pValue.Reference Human.Clint.Reference
741-58-2                 Wetmore 2012          Wetmore 2012
         Human.Funbound.plasma Human.Funbound.plasma.Reference
741-58-2                 0.006                    Wetmore 2012
         Human.Rblood2plasma Human.Rblood2plasma.Reference Rat.Clint
741-58-2                  NA                          <NA>     37.52
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
741-58-2               NA                       <NA>        Wetmore 2013
         Rat.Funbound.plasma Rat.Funbound.plasma.Reference
741-58-2               0.008                  Wetmore 2013
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> # Table Clint units for pooled hepatocytes (lot 70 and 73) are ml/min/10^9 cells
> # conversion factor is x 1000 ml -> ul and x 1/1000 10^9 to 10^6 cells, so no conversion necessary
> Shibata2002.table <- read.xls("Shibata2002.xlsx",stringsAsFactors=F)[-1,]
> chem.prop <- add_chemtable(Shibata2002.table, current.table=chem.prop,species="Human",reference="Shibata 2002",data.list=list(
+                CAS="CASRN",
+                Compound="compound",
+                Clint="CLint..in.vitro..70.73",
+                Funbound.plasma="fu",
+                Rblood2plasma="RB"))
Warning messages:
1: In CAS.checksum(this.CAS) : NAs introduced by coercion
2: In CAS.checksum(this.CAS) : NAs introduced by coercion
3: In CAS.checksum(this.CAS) : NAs introduced by coercion
4: In CAS.checksum(this.CAS) : NAs introduced by coercion
5: In CAS.checksum(this.CAS) : NAs introduced by coercion
6: In CAS.checksum(this.CAS) : NAs introduced by coercion
7: In CAS.checksum(this.CAS) : NAs introduced by coercion
8: In CAS.checksum(this.CAS) : NAs introduced by coercion
> 
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names pKa_Donor
741-58-2 Bensulide 741-58-2         TRUE          Bensulide      <NA>
         pKa_Donor.Reference All.Species Human.Clint Human.Clint.pValue
741-58-2                <NA>   Human|Rat       250.3            0.00089
         Human.Clint.pValue.Reference Human.Clint.Reference
741-58-2                 Wetmore 2012          Wetmore 2012
         Human.Funbound.plasma Human.Funbound.plasma.Reference
741-58-2                 0.006                    Wetmore 2012
         Human.Rblood2plasma Human.Rblood2plasma.Reference Rat.Clint
741-58-2                  NA                          <NA>     37.52
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
741-58-2               NA                       <NA>        Wetmore 2013
         Rat.Funbound.plasma Rat.Funbound.plasma.Reference
741-58-2               0.008                  Wetmore 2013
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> 
> #Table CLint units are uL/min/10^6 cells:
> Lau2002.table <- read.xls("Lau2002.xlsx",stringsAsFactors=F)[-1,]
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
> chem.prop <- add_chemtable(Lau2002.table, current.table=chem.prop, species="Human", reference="Lau2002",
+                data.list = list(CAS="CAS",
+                  Compound="Compound",
+                  Clint="In.Vitro.Clearance"))
There were 12 warnings (use warnings() to see them)
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names pKa_Donor
741-58-2 Bensulide 741-58-2         TRUE          Bensulide      <NA>
         pKa_Donor.Reference All.Species Human.Clint Human.Clint.pValue
741-58-2                <NA>   Human|Rat       250.3            0.00089
         Human.Clint.pValue.Reference Human.Clint.Reference
741-58-2                 Wetmore 2012          Wetmore 2012
         Human.Funbound.plasma Human.Funbound.plasma.Reference
741-58-2                 0.006                    Wetmore 2012
         Human.Rblood2plasma Human.Rblood2plasma.Reference Rat.Clint
741-58-2                  NA                          <NA>     37.52
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
741-58-2               NA                       <NA>        Wetmore 2013
         Rat.Funbound.plasma Rat.Funbound.plasma.Reference
741-58-2               0.008                  Wetmore 2013
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> #Table CLint units are uL/min/10^6 cells:
> Naritomi.table <- read.xls("Naritomi2003.xlsx",stringsAsFactors=F,skip=1)[1:18,]
> #Wrong CAS for Diazepam:
> Naritomi.table[Naritomi.table$CAS=="53320-84-6","CAS"] <- "439-14-5"
> chem.prop <- add_chemtable(Naritomi.table, current.table=chem.prop, reference="Naritomi 2003",
+                data.list = list(CAS="CAS",
+                  Compound="Compound",
+                  Species="Species",
+                  Clint="Clint.invitro..ul.min.10.6.cells.",
+                  Funbound.plasma="fp",
+                  Rblood2plasma="Rb",
+                  Fgutabs="Fa"))
Warning messages:
1: In CAS.checksum(this.CAS) : NAs introduced by coercion
2: In CAS.checksum(this.CAS) : NAs introduced by coercion
3: In CAS.checksum(this.CAS) : NAs introduced by coercion
4: In CAS.checksum(this.CAS) : NAs introduced by coercion
5: In CAS.checksum(this.CAS) : NAs introduced by coercion
6: In CAS.checksum(this.CAS) : NAs introduced by coercion
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names pKa_Donor
741-58-2 Bensulide 741-58-2         TRUE          Bensulide      <NA>
         pKa_Donor.Reference All.Species Human.Clint Human.Clint.pValue
741-58-2                <NA>   Human|Rat       250.3            0.00089
         Human.Clint.pValue.Reference Human.Clint.Reference
741-58-2                 Wetmore 2012          Wetmore 2012
         Human.Funbound.plasma Human.Funbound.plasma.Reference
741-58-2                 0.006                    Wetmore 2012
         Human.Rblood2plasma Human.Rblood2plasma.Reference Rat.Clint
741-58-2                  NA                          <NA>     37.52
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
741-58-2               NA                       <NA>        Wetmore 2013
         Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
741-58-2          NA                  <NA>               0.008
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
741-58-2                  Wetmore 2013                NA
         Rat.Rblood2plasma.Reference
741-58-2                        <NA>
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> #Table CLint units are uL/min/10^6 cells:
> McGinnity.table <- read.xls("McGinnity2004.xlsx",stringsAsFactors=F)[-1,]
> McGinnity.table[McGinnity.table$Human.Hepatic.Clint=="<1.0","Human.Hepatic.Clint"]<-0
> chem.prop <- add_chemtable(McGinnity.table,
+                current.table=chem.prop,
+                reference="McGinnity 2004", species="Human",
+                data.list=list(CAS="CASRN",
+                  Compound="Compound",
+                  Clint="Human.Hepatic.Clint"))
There were 32 warnings (use warnings() to see them)
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names pKa_Donor
741-58-2 Bensulide 741-58-2         TRUE          Bensulide      <NA>
         pKa_Donor.Reference All.Species Human.Clint Human.Clint.pValue
741-58-2                <NA>   Human|Rat       250.3            0.00089
         Human.Clint.pValue.Reference Human.Clint.Reference
741-58-2                 Wetmore 2012          Wetmore 2012
         Human.Funbound.plasma Human.Funbound.plasma.Reference
741-58-2                 0.006                    Wetmore 2012
         Human.Rblood2plasma Human.Rblood2plasma.Reference Rat.Clint
741-58-2                  NA                          <NA>     37.52
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
741-58-2               NA                       <NA>        Wetmore 2013
         Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
741-58-2          NA                  <NA>               0.008
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
741-58-2                  Wetmore 2013                NA
         Rat.Rblood2plasma.Reference
741-58-2                        <NA>
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> #Table CLint units are uL/min/10^6 cells:
> Ito.table <- read.xls("Ito2004.xlsx",stringsAsFactors=F)
> # Let's interpret "not determined" as no measurment instead of 0
> Ito.table[Ito.table$Clint..hepatocyte.=="ND","Clint..hepatocyte."]<-NA
> chem.prop <- add_chemtable(Ito.table,
+                current.table=chem.prop,
+                reference="Ito 2004", species="Human",
+                data.list=list(CAS="CAS",
+                  Compound="Compound",
+                  Clint="Clint..hepatocyte.",
+                  Funbound.plasma="fub"))
There were 29 warnings (use warnings() to see them)
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names pKa_Donor
741-58-2 Bensulide 741-58-2         TRUE          Bensulide      <NA>
         pKa_Donor.Reference All.Species Human.Clint Human.Clint.pValue
741-58-2                <NA>   Human|Rat       250.3            0.00089
         Human.Clint.pValue.Reference Human.Clint.Reference
741-58-2                 Wetmore 2012          Wetmore 2012
         Human.Funbound.plasma Human.Funbound.plasma.Reference
741-58-2                 0.006                    Wetmore 2012
         Human.Rblood2plasma Human.Rblood2plasma.Reference Rat.Clint
741-58-2                  NA                          <NA>     37.52
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
741-58-2               NA                       <NA>        Wetmore 2013
         Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
741-58-2          NA                  <NA>               0.008
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
741-58-2                  Wetmore 2013                NA
         Rat.Rblood2plasma.Reference
741-58-2                        <NA>
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> Schmitt.table <- read.xls("Schmitt2008-41817.xlsx",stringsAsFactors=F)
> for (this.row in 1:dim(Schmitt.table)[1])
+ {
+   this.CAS <- Schmitt.table[this.row,"CAS"]
+   this.compound <- Schmitt.table[this.row,"Compound"]
+   this.reference <- "Schmitt 2008"
+   chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"logP",Schmitt.table[this.row,"logP"],reference=this.reference)
+   if (Schmitt.table[this.row,"Compound.Type"]=="A")
+   {
+     chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"pKa_Donor",as.numeric(Schmitt.table[this.row,"pKa"]),reference=this.reference)
+     chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"pKa_Accept",NA,reference=this.reference)
+   }
+   else if (Schmitt.table[this.row,"Compound.Type"]=="B")
+   {
+     chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"pKa_Donor",NA,reference=this.reference)
+     chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"pKa_Accept",as.numeric(Schmitt.table[this.row,"pKa"]),reference=this.reference)
+   }
+   else if (Schmitt.table[this.row,"Compound.Type"]=="N")
+   {
+     chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"pKa_Donor",NA,reference=this.reference)
+     chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"pKa_Accept",NA,reference=this.reference)
+   }
+   chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"Funbound.plasma",Schmitt.table[this.row,"Fub"],species=Schmitt.table[this.row,"Species"],reference=this.reference)
+   chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"logMA",Schmitt.table[this.row,"logMA"],reference=this.reference)
+ }
There were 42 warnings (use warnings() to see them)
> 
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names logMA
741-58-2 Bensulide 741-58-2         TRUE          Bensulide    NA
         logMA.Reference logP logP.Reference pKa_Accept pKa_Accept.Reference
741-58-2            <NA>   NA           <NA>       <NA>                 <NA>
         pKa_Donor pKa_Donor.Reference All.Species Human.Clint
741-58-2      <NA>                <NA>   Human|Rat       250.3
         Human.Clint.pValue Human.Clint.pValue.Reference Human.Clint.Reference
741-58-2            0.00089                 Wetmore 2012          Wetmore 2012
         Human.Funbound.plasma Human.Funbound.plasma.Reference
741-58-2                 0.006                    Wetmore 2012
         Human.Rblood2plasma Human.Rblood2plasma.Reference
741-58-2                  NA                          <NA>
         Mouse.Funbound.plasma Mouse.Funbound.plasma.Reference
741-58-2                  <NA>                            <NA>
         Rabbit.Funbound.plasma Rabbit.Funbound.plasma.Reference Rat.Clint
741-58-2                   <NA>                             <NA>     37.52
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
741-58-2               NA                       <NA>        Wetmore 2013
         Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
741-58-2          NA                  <NA>               0.008
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
741-58-2                  Wetmore 2013                NA
         Rat.Rblood2plasma.Reference
741-58-2                        <NA>
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> Obach2018.table <- read.csv(
+   "Lombardo2018-Supplemental_82966_revised_corrected.csv",
+   skip=8,stringsAsFactors=F)
> 
> 
> # Get rid of non-numeric fu values:
> Obach2018.table$fu <- as.numeric(Obach2018.table$fraction.unbound..in.plasma..fu.)
> Obach2018.table <- subset(Obach2018.table,!is.na(fraction.unbound..in.plasma..fu.))
> chem.prop <- add_chemtable(Obach2018.table,
+                species="Human",
+                reference="Lombardo 2018",
+                current.table=chem.prop,
+                data.list=list(
+                  CAS="CAS..",
+                  Compound="Name",
+                  Funbound.plasma="fraction.unbound..in.plasma..fu."))
There were 50 or more warnings (use warnings() to see the first 50)
> 
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names logMA
741-58-2 Bensulide 741-58-2         TRUE          Bensulide    NA
         logMA.Reference logP logP.Reference pKa_Accept pKa_Accept.Reference
741-58-2            <NA>   NA           <NA>       <NA>                 <NA>
         pKa_Donor pKa_Donor.Reference All.Species Human.Clint
741-58-2      <NA>                <NA>   Human|Rat       250.3
         Human.Clint.pValue Human.Clint.pValue.Reference Human.Clint.Reference
741-58-2            0.00089                 Wetmore 2012          Wetmore 2012
         Human.Funbound.plasma Human.Funbound.plasma.Reference
741-58-2                 0.006                    Wetmore 2012
         Human.Rblood2plasma Human.Rblood2plasma.Reference
741-58-2                  NA                          <NA>
         Mouse.Funbound.plasma Mouse.Funbound.plasma.Reference
741-58-2                  <NA>                            <NA>
         Rabbit.Funbound.plasma Rabbit.Funbound.plasma.Reference Rat.Clint
741-58-2                   <NA>                             <NA>     37.52
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
741-58-2               NA                       <NA>        Wetmore 2013
         Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
741-58-2          NA                  <NA>               0.008
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
741-58-2                  Wetmore 2013                NA
         Rat.Rblood2plasma.Reference
741-58-2                        <NA>
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> 
> #Table CLint units are L/h/10^6 hepatocytes
> TNO.table <- read.xls("HT-PBPK compounds-122216.xlsx",stringsAsFactors=F)
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
> TNO.table <- subset(TNO.table,TNO.table$Source!="")
> 
> for (this.row in 1:dim(TNO.table)[1])
+ {
+   this.CAS <- TNO.table[this.row,"CAS.."]
+   this.compound <- TNO.table[this.row,"Compound.name"]
+   this.reference <- TNO.table[this.row,"Source"]
+   if (this.reference != "EPA/Hamner")
+   {
+     if (!is.na(as.numeric(TNO.table[this.row,"CLint.h"]))) chem.prop <- 
+       augment.table(
+         chem.prop,
+         this.CAS,
+         this.compound,
+         "Clint",
+         TNO.table[this.row,"CLint.h"],
+         species="Human",
+         reference=this.reference)
+     if (!is.na(as.numeric(TNO.table[this.row,"fup"]))) chem.prop <- 
+       augment.table(
+       chem.prop,
+       this.CAS,
+       this.compound,
+       "Funbound.plasma",
+       TNO.table[this.row,"fup"],
+       species="Human",
+       reference=this.reference)
+   }
+   this.reference <- "TNO"
+   chem.prop <- augment.table(
+     chem.prop,
+     this.CAS,
+     this.compound,
+     "logP",
+     log10(TNO.table[this.row,"logP"]),
+     reference=this.reference)
+   chem.prop <- augment.table(
+     chem.prop,
+     this.CAS,
+     this.compound,
+     "MW",
+     TNO.table[this.row,"MW"],
+     reference=this.reference)
+   chem.prop <- augment.table(
+     chem.prop,
+     this.CAS,
+     this.compound,
+     "Rblood2plasma",
+     TNO.table[this.row,"Rbp"],
+     species="Human",
+     reference=this.reference)
+   if (!is.na(TNO.table[this.row,"ion"]))
+   {
+     if (TNO.table[this.row,"ion"] == "mpa")
+     {
+       chem.prop <- augment.table(
+         chem.prop,
+         this.CAS,
+         this.compound,
+         "pKa_Donor",
+         as.numeric(TNO.table[this.row,"pKa1"]),
+         reference=this.reference)
+       chem.prop <- augment.table(
+         chem.prop,
+         this.CAS,
+         this.compound,
+         "pKa_Accept",
+         NA,
+         reference=this.reference)
+     }
+     else if (TNO.table[this.row,"ion"] == "dpa")
+     {
+       chem.prop <- augment.table(
+         chem.prop,
+         this.CAS,
+         this.compound,
+         "pKa_Donor",
+         paste(as.numeric(TNO.table[this.row,"pKa1"]),
+         as.numeric(TNO.table[this.row,"pKa2"]),sep=","),
+         reference=this.reference)
+       chem.prop <- augment.table(
+         chem.prop,
+         this.CAS,
+         this.compound,
+         "pKa_Accept",
+         NA,
+         reference=this.reference)
+     }
+     else if (TNO.table[this.row,"ion"] == "mpb")
+     {
+       chem.prop <- augment.table(
+         chem.prop,
+         this.CAS,
+         this.compound,
+         "pKa_Accept",
+         as.numeric(TNO.table[this.row,"pKa1"]),
+         reference=this.reference)
+       chem.prop <- augment.table(
+         chem.prop,
+         this.CAS,
+         this.compound,
+         "pKa_Donor",
+         NA,
+         reference=this.reference)
+     }
+     else if (TNO.table[this.row,"ion"] == "dpb")
+     {
+       chem.prop <- augment.table(
+         chem.prop,
+         this.CAS,
+         this.compound,
+         "pKa_Accept",
+         paste(as.numeric(TNO.table[this.row,"pKa1"]),
+         as.numeric(TNO.table[this.row,"pKa2"]),sep=","),
+         reference=this.reference)
+       chem.prop <- augment.table(
+         chem.prop,
+         this.CAS,
+         this.compound,"pKa_Donor",
+         NA,
+         reference=this.reference)
+     }
+     else if (TNO.table[this.row,"ion"] == "zwi")
+     {
+       if (regexpr("acid",TNO.table[this.row,"pKa1"])!=-1)
+       {
+         chem.prop <- augment.table(
+           chem.prop,
+           this.CAS,
+           this.compound,
+           "pKa_Donor",
+           as.numeric(strsplit(TNO.table[this.row,"pKa1"]," ")[[1]][1]),
+           reference=this.reference)
+         chem.prop <- augment.table(
+           chem.prop,
+           this.CAS,
+           this.compound,
+           "pKa_Accept",
+           as.numeric(strsplit(TNO.table[this.row,"pKa2"]," ")[[1]][1]),
+           reference=this.reference)
+       } else {
+         chem.prop <- augment.table(
+           chem.prop,
+           this.CAS,
+           this.compound,
+           "pKa_Accept",
+           as.numeric(strsplit(TNO.table[this.row,"pKa1"]," ")[[1]][1]),
+           reference=this.reference)
+         chem.prop <- augment.table(
+           chem.prop,
+           this.CAS,
+           this.compound,
+           "pKa_Donor",
+           as.numeric(strsplit(TNO.table[this.row,"pKa2"]," ")[[1]][1]),
+           reference=this.reference)
+       }
+     } else {
+       chem.prop <- augment.table(
+         chem.prop,
+         this.CAS,
+         this.compound,
+         "pKa_Donor",
+         NA,
+         reference=this.reference)
+       chem.prop <- augment.table(
+         chem.prop,
+         this.CAS,
+         this.compound,
+         "pKa_Accept",
+         NA,
+         reference=this.reference)
+     }
+   }
+ }
There were 38 warnings (use warnings() to see them)
> 
> chem.prop[chem.prop$Compound=="Diazepam",]
         Compound      CAS CAS.Checksum All.Compound.Names logMA
439-14-5 Diazepam 439-14-5         TRUE           Diazepam  2.76
         logMA.Reference logP logP.Reference    MW MW.Reference pKa_Accept
439-14-5    Schmitt 2008 2.82   Schmitt 2008 284.7          TNO        3.3
         pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
439-14-5         Schmitt 2008      <NA>                <NA>   Human|Rat
         Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
439-14-5        0.05                 NA                         <NA>
         Human.Clint.Reference Human.Funbound.plasma
439-14-5          Shibata 2002                 0.013
         Human.Funbound.plasma.Reference Human.Rblood2plasma
439-14-5                      Obach 1999                0.71
         Human.Rblood2plasma.Reference Mouse.Funbound.plasma
439-14-5                    Obach 1999                  <NA>
         Mouse.Funbound.plasma.Reference Rabbit.Funbound.plasma
439-14-5                            <NA>                   <NA>
         Rabbit.Funbound.plasma.Reference Rat.Clint Rat.Clint.pValue
439-14-5                             <NA>  7.19E+01               NA
         Rat.Clint.pValue.Reference Rat.Clint.Reference Rat.Fgutabs
439-14-5                       <NA>       Naritomi 2003           1
         Rat.Fgutabs.Reference Rat.Funbound.plasma
439-14-5         Naritomi 2003            1.37E-01
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
439-14-5                 Naritomi 2003              1.04
         Rat.Rblood2plasma.Reference
439-14-5               Naritomi 2003
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names logMA
741-58-2 Bensulide 741-58-2         TRUE          Bensulide    NA
         logMA.Reference logP logP.Reference    MW MW.Reference pKa_Accept
741-58-2            <NA> 3.45            TNO 397.5          TNO      10.18
         pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
741-58-2                  TNO      <NA>                <NA>   Human|Rat
         Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
741-58-2       250.3            0.00089                 Wetmore 2012
         Human.Clint.Reference Human.Funbound.plasma
741-58-2          Wetmore 2012                 0.006
         Human.Funbound.plasma.Reference Human.Rblood2plasma
741-58-2                    Wetmore 2012                0.65
         Human.Rblood2plasma.Reference Mouse.Funbound.plasma
741-58-2                           TNO                  <NA>
         Mouse.Funbound.plasma.Reference Rabbit.Funbound.plasma
741-58-2                            <NA>                   <NA>
         Rabbit.Funbound.plasma.Reference Rat.Clint Rat.Clint.pValue
741-58-2                             <NA>     37.52               NA
         Rat.Clint.pValue.Reference Rat.Clint.Reference Rat.Fgutabs
741-58-2                       <NA>        Wetmore 2013          NA
         Rat.Fgutabs.Reference Rat.Funbound.plasma
741-58-2                  <NA>               0.008
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
741-58-2                  Wetmore 2013                NA
         Rat.Rblood2plasma.Reference
741-58-2                        <NA>
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> 
> ## Not sure how find the right parameters to do all the needed conversions to
> ##  get back to uL/min/million cells, so skipping this data for now. We lose 10
> ##  chemicals, including 6 with Obach 2008 in vivo data
> ## Must convert CLint using fub,  fuinc from Naritomi 2003,
> ##  and RB from Shibata 2002, Naritomi 2003, and Ito and Houston 2004
> #Naritomi.table2 <- read.xls("Naritomi2003.xlsx",,sheet=2,stringsAsFactors=F)[-1,]
> ## Original CLint units are ml/min/kg BW
> ## Page 1306: 120 * 10^6 cells/g liver
> ## Page 1306: 1500-1800 g liver/70 kg -- 23.6 g liver/kg BW
> ## Conversion factor: *1000/23.6/120/10^6             (ml->uL,1/kgBW->1/g liver,1/g liver->1/10^6 cells)->uL/min/10^6 cells)
> #Riley.table <- read.xls("Riley2005.xlsx",stringsAsFactors=F,sheet=1)
> #for (this.row in 1:dim(Riley.table)[1])
> #{
> #  this.CAS <- Riley.table[this.row,"CAS"]
> #  this.compound <- Riley.table[this.row,"Compound"]
> #  this.reference <- "Riley 2005"
> #  chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"Human.Fub",Riley.table[this.row,"Fub"],reference=this.reference)
> #  Fub <- Riley.table[this.row,"Fub"]
> #  if (this.CAS %in% Shibata2002.table$CASRN) Rbp <- Shibata2002.table[Shibata2002.table$CASRN==this.CAS,"RB"]
> #  else if (this.CAS %in% Naritomi.table$CAS) Rbp <- Naritomi.table[Naritomi.table$CAS==this.CAS,"RB"]
> #  else {
> #    Rbp <- chem.prop
> #  }
> #  if (this.CAS %in% Naritomi.table2$CAS) Fuinc <- Naritomi.table[Naritomi.table2$CAS==this.CAS,"fu.hepatocytes"]
> #  else {
> #    Fuinc <=
> #  }
> #  chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"Human.Clint",as.numeric(Riley.table[this.row,"Clint.Predicted"])*1000/23.6/120/10^6,reference=this.reference)
> #  if (Riley.table[this.row,"Chemical.Class"]=="N")
> #  {
> #    chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"pKa_Donor",NA,reference=this.reference)
> #    chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"pKb",NA,reference=this.reference)
> #  }
> #}
> 
> 
> #Table CLint units are uL/min/10^6 cells:
> # For Rotroff data they average 1 and 10 uM, but then you get the same numbers
> Tonnelier.table <- read.xls("Tonnelier-2012.xlsx",stringsAsFactors=F)
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
> # Dashboard prefers different CAS:
> Tonnelier.table[Tonnelier.table$Name=="Abamectin","CAS"] <- "71751-41-2"
> Tonnelier.table[Tonnelier.table$CAS=="51630-58-1","CAS"] <- "67614-33-9"
> Tonnelier.table$CAS <- sapply(Tonnelier.table$CAS,function(x) substr(x,regexpr("[^0]",x),nchar(x)))
> chem.prop <- add_chemtable(Tonnelier.table,
+                species="Human",
+                reference="Tonnelier 2012",
+                current.table=chem.prop,
+                data.list=list(
+                  CAS="CAS",
+                  Compound="Name",
+                  Clint="CLint..HEP......",
+                  Funbound.plasma="Fu",
+                  Logp="log.KOW",
+                  MW="MW..g.mol."))
There were 18 warnings (use warnings() to see them)
> 
> 
> 
> for (this.row in 1:dim(Tonnelier.table)[1])
+ {
+   this.CAS <- Tonnelier.table[this.row,"CAS"]
+   this.compound <- Tonnelier.table[this.row,"Name"]
+   this.reference <- "Tonnelier 2012"
+   if (is.na(as.numeric(Tonnelier.table[this.row,"pKa1"])))
+   {
+     chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"pKa_Donor",NA,reference=this.reference)
+     chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"pKa_Accept",NA,reference=this.reference)
+   }
+ }
There were 36 warnings (use warnings() to see them)
> 
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names logMA
741-58-2 Bensulide 741-58-2         TRUE          Bensulide    NA
         logMA.Reference logP logP.Reference    MW MW.Reference pKa_Accept
741-58-2            <NA> 3.45            TNO 397.5          TNO      10.18
         pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
741-58-2                  TNO      <NA>                <NA>   Human|Rat
         Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
741-58-2       250.3            0.00089                 Wetmore 2012
         Human.Clint.Reference Human.Funbound.plasma
741-58-2          Wetmore 2012                 0.006
         Human.Funbound.plasma.Reference Human.Rblood2plasma
741-58-2                    Wetmore 2012                0.65
         Human.Rblood2plasma.Reference Mouse.Funbound.plasma
741-58-2                           TNO                  <NA>
         Mouse.Funbound.plasma.Reference Rabbit.Funbound.plasma
741-58-2                            <NA>                   <NA>
         Rabbit.Funbound.plasma.Reference Rat.Clint Rat.Clint.pValue
741-58-2                             <NA>     37.52               NA
         Rat.Clint.pValue.Reference Rat.Clint.Reference Rat.Fgutabs
741-58-2                       <NA>        Wetmore 2013          NA
         Rat.Fgutabs.Reference Rat.Funbound.plasma
741-58-2                  <NA>               0.008
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
741-58-2                  Wetmore 2013                NA
         Rat.Rblood2plasma.Reference
741-58-2                        <NA>
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> 
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names logMA
741-58-2 Bensulide 741-58-2         TRUE          Bensulide    NA
         logMA.Reference logP logP.Reference    MW MW.Reference pKa_Accept
741-58-2            <NA> 3.45            TNO 397.5          TNO      10.18
         pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
741-58-2                  TNO      <NA>                <NA>   Human|Rat
         Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
741-58-2       250.3            0.00089                 Wetmore 2012
         Human.Clint.Reference Human.Funbound.plasma
741-58-2          Wetmore 2012                 0.006
         Human.Funbound.plasma.Reference Human.Rblood2plasma
741-58-2                    Wetmore 2012                0.65
         Human.Rblood2plasma.Reference Mouse.Funbound.plasma
741-58-2                           TNO                  <NA>
         Mouse.Funbound.plasma.Reference Rabbit.Funbound.plasma
741-58-2                            <NA>                   <NA>
         Rabbit.Funbound.plasma.Reference Rat.Clint Rat.Clint.pValue
741-58-2                             <NA>     37.52               NA
         Rat.Clint.pValue.Reference Rat.Clint.Reference Rat.Fgutabs
741-58-2                       <NA>        Wetmore 2013          NA
         Rat.Fgutabs.Reference Rat.Funbound.plasma
741-58-2                  <NA>               0.008
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
741-58-2                  Wetmore 2013                NA
         Rat.Rblood2plasma.Reference
741-58-2                        <NA>
> 
> 
> Paixao2012.table2 <- read.xls("Paixao-2012.xlsx",stringsAsFactors=F,sheet=1)
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
> Paixao2012.table2$fup <- 1-Paixao2012.table2$fp
> chem.prop <- add_chemtable(Paixao2012.table2,                             
+                species="Human",
+                reference="Paixao 2012",
+                current.table=chem.prop,
+                data.list=list(
+                  CAS="CAS",
+                  Compound="Drug",
+                  Funbound.plasma="fup",
+                  Rblood2plasma="Rb",
+                  Fgutabs="Fabs"))
Warning messages:
1: In CAS.checksum(this.CAS) : NAs introduced by coercion
2: In CAS.checksum(this.CAS) : NAs introduced by coercion
3: In CAS.checksum(this.CAS) : NAs introduced by coercion
4: In CAS.checksum(this.CAS) : NAs introduced by coercion
5: In CAS.checksum(this.CAS) : NAs introduced by coercion
> # Table clint are units of L/h
> # 107 x 106 cell g-1 liver (Wilson et al., 2003) and it was also assumed that liver weighed
> # 20 g kg-1 of body weight.                 
> Paixao2012.table3 <- read.xls("Paixao-2012.xlsx",stringsAsFactors=F,sheet=2,skip=1)
> Paixao2012.table3$In.Vitro.Clint..uL.min.106hep <- Paixao2012.table3$In.vitro.Clint..L.h./1000/70/20/107*60
> chem.prop <- add_chemtable(Paixao2012.table3,                             
+                species="Human",
+                reference="Paixao 2012",
+                current.table=chem.prop,
+                data.list=list(
+                  CAS="X",
+                  Compound="X.1",
+                  Clint="In.Vitro.Clint..uL.min.106hep"))
>                  
> Paixao2012.table4 <- read.xls("Paixao-2012.xlsx",stringsAsFactors=F,sheet=3,skip=1)
> # Table clint are units of L/h
> # 107 x 106 cell g-1 liver (Wilson et al., 2003) and it was also assumed that liver weighed
> # 20 g kg-1 of body weight.                 
> Paixao2012.table4$In.Vitro.Clint..uL.min.106hep <- Paixao2012.table4$In.vitro.Clint..L.h./1000/70/20/107*60
> chem.prop <- add_chemtable(Paixao2012.table4,                             
+                species="Human",
+                reference="Paixao 2012",
+                current.table=chem.prop,
+                data.list=list(
+                  CAS="CAS",
+                  Compound="Drug",
+                  Clint="In.Vitro.Clint..uL.min.106hep"))
>                  
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names logMA
741-58-2 Bensulide 741-58-2         TRUE          Bensulide    NA
         logMA.Reference logP logP.Reference    MW MW.Reference pKa_Accept
741-58-2            <NA> 3.45            TNO 397.5          TNO      10.18
         pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
741-58-2                  TNO      <NA>                <NA>   Human|Rat
         Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
741-58-2       250.3            0.00089                 Wetmore 2012
         Human.Clint.Reference Human.Fgutabs Human.Fgutabs.Reference
741-58-2          Wetmore 2012            NA                    <NA>
         Human.Funbound.plasma Human.Funbound.plasma.Reference
741-58-2                 0.006                    Wetmore 2012
         Human.Rblood2plasma Human.Rblood2plasma.Reference
741-58-2                0.65                           TNO
         Mouse.Funbound.plasma Mouse.Funbound.plasma.Reference
741-58-2                  <NA>                            <NA>
         Rabbit.Funbound.plasma Rabbit.Funbound.plasma.Reference Rat.Clint
741-58-2                   <NA>                             <NA>     37.52
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
741-58-2               NA                       <NA>        Wetmore 2013
         Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
741-58-2          NA                  <NA>               0.008
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
741-58-2                  Wetmore 2013                NA
         Rat.Rblood2plasma.Reference
741-58-2                        <NA>
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> chem.prop[chem.prop$Compound=="Abamectin",]
            Compound        CAS CAS.Checksum All.Compound.Names logMA
71751-41-2 Abamectin 71751-41-2         TRUE          Abamectin    NA
           logMA.Reference logP logP.Reference  MW   MW.Reference pKa_Accept
71751-41-2            <NA> 4.48 Tonnelier 2012 819 Tonnelier 2012       <NA>
           pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
71751-41-2                 <NA>      <NA>                <NA>       Human
           Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
71751-41-2        5.24           0.000917                 Wetmore 2012
           Human.Clint.Reference Human.Fgutabs Human.Fgutabs.Reference
71751-41-2          Wetmore 2012            NA                    <NA>
           Human.Funbound.plasma Human.Funbound.plasma.Reference
71751-41-2                 0.067                    Wetmore 2012
           Human.Rblood2plasma Human.Rblood2plasma.Reference
71751-41-2                  NA                          <NA>
           Mouse.Funbound.plasma Mouse.Funbound.plasma.Reference
71751-41-2                  <NA>                            <NA>
           Rabbit.Funbound.plasma Rabbit.Funbound.plasma.Reference Rat.Clint
71751-41-2                   <NA>                             <NA>      <NA>
           Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
71751-41-2               NA                       <NA>                <NA>
           Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
71751-41-2          NA                  <NA>                <NA>
           Rat.Funbound.plasma.Reference Rat.Rblood2plasma
71751-41-2                          <NA>                NA
           Rat.Rblood2plasma.Reference
71751-41-2                        <NA>
> 
> chem.prop <- chem.prop[chem.prop$CAS.Checksum,]
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names logMA
741-58-2 Bensulide 741-58-2         TRUE          Bensulide    NA
         logMA.Reference logP logP.Reference    MW MW.Reference pKa_Accept
741-58-2            <NA> 3.45            TNO 397.5          TNO      10.18
         pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
741-58-2                  TNO      <NA>                <NA>   Human|Rat
         Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
741-58-2       250.3            0.00089                 Wetmore 2012
         Human.Clint.Reference Human.Fgutabs Human.Fgutabs.Reference
741-58-2          Wetmore 2012            NA                    <NA>
         Human.Funbound.plasma Human.Funbound.plasma.Reference
741-58-2                 0.006                    Wetmore 2012
         Human.Rblood2plasma Human.Rblood2plasma.Reference
741-58-2                0.65                           TNO
         Mouse.Funbound.plasma Mouse.Funbound.plasma.Reference
741-58-2                  <NA>                            <NA>
         Rabbit.Funbound.plasma Rabbit.Funbound.plasma.Reference Rat.Clint
741-58-2                   <NA>                             <NA>     37.52
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
741-58-2               NA                       <NA>        Wetmore 2013
         Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
741-58-2          NA                  <NA>               0.008
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
741-58-2                  Wetmore 2013                NA
         Rat.Rblood2plasma.Reference
741-58-2                        <NA>
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> chem.prop[chem.prop$Compound=="Abamectin",]
            Compound        CAS CAS.Checksum All.Compound.Names logMA
71751-41-2 Abamectin 71751-41-2         TRUE          Abamectin    NA
           logMA.Reference logP logP.Reference  MW   MW.Reference pKa_Accept
71751-41-2            <NA> 4.48 Tonnelier 2012 819 Tonnelier 2012       <NA>
           pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
71751-41-2                 <NA>      <NA>                <NA>       Human
           Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
71751-41-2        5.24           0.000917                 Wetmore 2012
           Human.Clint.Reference Human.Fgutabs Human.Fgutabs.Reference
71751-41-2          Wetmore 2012            NA                    <NA>
           Human.Funbound.plasma Human.Funbound.plasma.Reference
71751-41-2                 0.067                    Wetmore 2012
           Human.Rblood2plasma Human.Rblood2plasma.Reference
71751-41-2                  NA                          <NA>
           Mouse.Funbound.plasma Mouse.Funbound.plasma.Reference
71751-41-2                  <NA>                            <NA>
           Rabbit.Funbound.plasma Rabbit.Funbound.plasma.Reference Rat.Clint
71751-41-2                   <NA>                             <NA>      <NA>
           Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
71751-41-2               NA                       <NA>                <NA>
           Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
71751-41-2          NA                  <NA>                <NA>
           Rat.Funbound.plasma.Reference Rat.Rblood2plasma
71751-41-2                          <NA>                NA
           Rat.Rblood2plasma.Reference
71751-41-2                        <NA>
> 
> load("CASback.RData")
> library(stringr)
> Cory.newpKa <- ret.df
> Cory.newpKa[Cory.newpKa$CAS=="3764-87-2","Compound"] <- "Trestolone"
> # Dashboard prefers a different cas:
> Cory.newpKa[Cory.newpKa$CAS=="85650-52-8","CAS"] <- "61337-67-5"
>  
> # Old mistake gave wrong CAS for Metoprolol in list given to Cory::
> Cory.newpKa <- Cory.newpKa[Cory.newpKa$CAS!="37350-58-6",]
> Cory.newpKa$Donor <- str_replace(Cory.newpKa$pKaTools_APKA,";",",")
> Cory.newpKa$Accept <- str_replace(Cory.newpKa$pKaTools_BPKA,";",",")
> chem.prop <- add_chemtable(Cory.newpKa,
+                current.table=chem.prop,
+                reference="Strope 2018",
+                data.list=list(
+                  CAS="CAS",
+                  Compound="Compound",
+                  pKa_Donor="Donor",
+                  pKa_Accept="Accept"))
There were 50 or more warnings (use warnings() to see the first 50)
> 
> 
> 
> 
> CorypKaTable <- read.xls("HTPBPK-chems-pKa_CLS.xlsx",stringsAsFactors=F)
> # Old mistake caused abamectin to be double listed in list given to Cory:
> CorypKaTable <- CorypKaTable[CorypKaTable$CAS!="65195-55-3",]
> # Old mistake caused pyrthiobac-sodium to be double listed in list given to Cory:
> CorypKaTable <- CorypKaTable[CorypKaTable$CAS!="123342-93-8",]
> # Old mistake caused Diazepam to be double listed in list given to Cory::
> CorypKaTable <- CorypKaTable[CorypKaTable$CAS!="53320-84-6",]
> # Old mistake gave wrong CAS for Metoprolol in list given to Cory::
> CorypKaTable <- CorypKaTable[CorypKaTable$CAS!="37350-58-6",]
> 
> # Picloram CAS messed up:
> CorypKaTable[CorypKaTable$CAS=="1918-02-01","CAS"] <- "1918-02-1"
> CorypKaTable[regexpr(",",CorypKaTable$pKa)==-1&!is.na(CorypKaTable$pKa),"pKa"] <- as.character(signif(as.numeric( CorypKaTable[regexpr(",",CorypKaTable$pKa)==-1&!is.na(CorypKaTable$pKa),"pKa"]),3))
> CorypKaTable[regexpr(",",CorypKaTable$pKb)==-1&!is.na(CorypKaTable$pKb),"pKb"] <- as.character(signif(as.numeric( CorypKaTable[regexpr(",",CorypKaTable$pKb)==-1&!is.na(CorypKaTable$pKb),"pKb"]),3))
> CorypKaTable <- CorypKaTable[CorypKaTable$CAS %in% chem.prop$CAS,]
> CorypKaTable$pKa.Reference[!is.na(CorypKaTable$pKa.Reference) & CorypKaTable$pKa.Reference=="SPARC"] <- "Strope 2018"
> CorypKaTable$pKb.Reference[!is.na(CorypKaTable$pKb.Reference) & CorypKaTable$pKb.Reference=="SPARC"] <- "Strope 201."
> 
> 
> chem.prop <- add_chemtable(CorypKaTable,
+                current.table=chem.prop,
+                data.list=list(
+                  CAS="CAS",
+                  Compound="Compound",
+                  Reference="pKa.Reference",
+                  pKa_Donor="pKa"))
There were 32 warnings (use warnings() to see them)
> 
> chem.prop <- add_chemtable(CorypKaTable,
+                current.table=chem.prop,
+                data.list=list(
+                  CAS="CAS",
+                  Compound="Compound",
+                  Reference="pKb.Reference",
+                  pKa_Accept="pKb"))
There were 17 warnings (use warnings() to see them)
> 
> 
> chem.prop[chem.prop$CAS=="33286-22-5","Compound"] <- "Diltiazem hydrochloride"
> chem.prop[chem.prop$CAS=="64118-84-9","Compound"] <- "4'-Hydroxydiclofenac"
> chem.prop[chem.prop$Compound=="Abamectin",]
            Compound        CAS CAS.Checksum All.Compound.Names logMA
71751-41-2 Abamectin 71751-41-2         TRUE          Abamectin    NA
           logMA.Reference logP logP.Reference  MW   MW.Reference pKa_Accept
71751-41-2            <NA> 4.48 Tonnelier 2012 819 Tonnelier 2012       <NA>
           pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
71751-41-2                 <NA>      13.4         Strope 2018       Human
           Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
71751-41-2        5.24           0.000917                 Wetmore 2012
           Human.Clint.Reference Human.Fgutabs Human.Fgutabs.Reference
71751-41-2          Wetmore 2012            NA                    <NA>
           Human.Funbound.plasma Human.Funbound.plasma.Reference
71751-41-2                 0.067                    Wetmore 2012
           Human.Rblood2plasma Human.Rblood2plasma.Reference
71751-41-2                  NA                          <NA>
           Mouse.Funbound.plasma Mouse.Funbound.plasma.Reference
71751-41-2                  <NA>                            <NA>
           Rabbit.Funbound.plasma Rabbit.Funbound.plasma.Reference Rat.Clint
71751-41-2                   <NA>                             <NA>      <NA>
           Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
71751-41-2               NA                       <NA>                <NA>
           Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
71751-41-2          NA                  <NA>                <NA>
           Rat.Funbound.plasma.Reference Rat.Rblood2plasma
71751-41-2                          <NA>                NA
           Rat.Rblood2plasma.Reference
71751-41-2                        <NA>
> 
> load("to_john.RData")
> 
> chem.prop <- add_chemtable(to.john,
+                current.table=chem.prop,
+                data.list=list(
+                  CAS="CASRN",
+                  Compound="ChemName",
+                  pKa_Donor="pKaTools_APKA"),reference="Strope 2018")
There were 19 warnings (use warnings() to see them)
> 
> chem.prop <- add_chemtable(to.john,
+                current.table=chem.prop,
+                data.list=list(
+                  CAS="CASRN",
+                  Compound="ChemName",
+                  pKa_Accept="pKaTools_BPKA"),reference="Strope 2018")
Warning messages:
1: In augment.table(current.table, this.CAS, this.compound, this.property = this.data,  :
  NAs introduced by coercion
2: In CAS.checksum(this.CAS) : NAs introduced by coercion
3: In augment.table(current.table, this.CAS, this.compound, this.property = this.data,  :
  NAs introduced by coercion
4: In augment.table(current.table, this.CAS, this.compound, this.property = this.data,  :
  NAs introduced by coercion
5: In augment.table(current.table, this.CAS, this.compound, this.property = this.data,  :
  NAs introduced by coercion
6: In augment.table(current.table, this.CAS, this.compound, this.property = this.data,  :
  NAs introduced by coercion
> 
> MA.data <- read.xls("Endo-2011.xlsx",stringsAsFactors=F)
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
> this.reference <- "Endo 2011"
> for (this.row in 1:dim(MA.data)[1])
+ {
+   this.CAS <- MA.data[this.row,"CAS.RN"]
+   if (this.CAS %in% chem.prop$CAS)
+   {
+     this.compound <- MA.data[this.row,"Compound"]
+     chem.prop <- augment.table(chem.prop,this.CAS,this.compound,"logMA",MA.data[this.row,"Klipw"],reference=this.reference)
+   }
+ }
> 
> chem.prop[chem.prop$Compound=="Bensulide",]
          Compound      CAS CAS.Checksum All.Compound.Names logMA
741-58-2 Bensulide 741-58-2         TRUE          Bensulide    NA
         logMA.Reference logP logP.Reference    MW MW.Reference pKa_Accept
741-58-2            <NA> 3.45            TNO 397.5          TNO      10.18
         pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
741-58-2                  TNO      <NA>                <NA>   Human|Rat
         Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
741-58-2       250.3            0.00089                 Wetmore 2012
         Human.Clint.Reference Human.Fgutabs Human.Fgutabs.Reference
741-58-2          Wetmore 2012            NA                    <NA>
         Human.Funbound.plasma Human.Funbound.plasma.Reference
741-58-2                 0.006                    Wetmore 2012
         Human.Rblood2plasma Human.Rblood2plasma.Reference
741-58-2                0.65                           TNO
         Mouse.Funbound.plasma Mouse.Funbound.plasma.Reference
741-58-2                  <NA>                            <NA>
         Rabbit.Funbound.plasma Rabbit.Funbound.plasma.Reference Rat.Clint
741-58-2                   <NA>                             <NA>     37.52
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
741-58-2               NA                       <NA>        Wetmore 2013
         Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
741-58-2          NA                  <NA>               0.008
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
741-58-2                  Wetmore 2013                NA
         Rat.Rblood2plasma.Reference
741-58-2                        <NA>
> sum(chem.prop$Compound=="dibutyl benzene-1,2-dicarboxylate")
[1] 0
> chem.prop[regexpr("Pyrithiobac",chem.prop$Compound)!=-1,]
                      Compound         CAS CAS.Checksum
123343-16-8 Pyrithiobac-sodium 123343-16-8         TRUE
                                            All.Compound.Names logMA
123343-16-8 Pyrithiobac-sodium|Pryrithiobac-sodium|Pyrithiobac    NA
            logMA.Reference logP logP.Reference    MW MW.Reference pKa_Accept
123343-16-8            <NA> 3.89            TNO 348.7          TNO       0.53
            pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
123343-16-8                  TNO      2.21                 TNO   Human|Rat
            Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
123343-16-8        3.98              0.381                 Wetmore 2012
            Human.Clint.Reference Human.Fgutabs Human.Fgutabs.Reference
123343-16-8          Wetmore 2012            NA                    <NA>
            Human.Funbound.plasma Human.Funbound.plasma.Reference
123343-16-8                 0.027                    Wetmore 2012
            Human.Rblood2plasma Human.Rblood2plasma.Reference
123343-16-8                0.73                           TNO
            Mouse.Funbound.plasma Mouse.Funbound.plasma.Reference
123343-16-8                  <NA>                            <NA>
            Rabbit.Funbound.plasma Rabbit.Funbound.plasma.Reference Rat.Clint
123343-16-8                   <NA>                             <NA>      1.95
            Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
123343-16-8               NA                       <NA>        Wetmore 2013
            Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
123343-16-8          NA                  <NA>               0.009
            Rat.Funbound.plasma.Reference Rat.Rblood2plasma
123343-16-8                  Wetmore 2013                NA
            Rat.Rblood2plasma.Reference
123343-16-8                        <NA>
> chem.prop[chem.prop$Compound=="Diazepam",]
         Compound      CAS CAS.Checksum All.Compound.Names logMA
439-14-5 Diazepam 439-14-5         TRUE           Diazepam  2.76
         logMA.Reference logP logP.Reference    MW MW.Reference pKa_Accept
439-14-5    Schmitt 2008 2.82   Schmitt 2008 284.7          TNO        3.3
         pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
439-14-5         Schmitt 2008      <NA>                <NA>   Human|Rat
         Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
439-14-5        0.05                 NA                         <NA>
         Human.Clint.Reference Human.Fgutabs Human.Fgutabs.Reference
439-14-5          Shibata 2002             1             Paixao 2012
         Human.Funbound.plasma Human.Funbound.plasma.Reference
439-14-5                 0.013                      Obach 1999
         Human.Rblood2plasma Human.Rblood2plasma.Reference
439-14-5                0.71                    Obach 1999
         Mouse.Funbound.plasma Mouse.Funbound.plasma.Reference
439-14-5                  <NA>                            <NA>
         Rabbit.Funbound.plasma Rabbit.Funbound.plasma.Reference Rat.Clint
439-14-5                   <NA>                             <NA>  7.19E+01
         Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
439-14-5               NA                       <NA>       Naritomi 2003
         Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
439-14-5           1         Naritomi 2003            1.37E-01
         Rat.Funbound.plasma.Reference Rat.Rblood2plasma
439-14-5                 Naritomi 2003              1.04
         Rat.Rblood2plasma.Reference
439-14-5               Naritomi 2003
> chem.prop[chem.prop$Compound=="Picloram",]
          Compound       CAS CAS.Checksum All.Compound.Names logMA
1918-02-1 Picloram 1918-02-1         TRUE           Picloram    NA
          logMA.Reference logP logP.Reference MW MW.Reference pKa_Accept
1918-02-1            <NA>   NA           <NA> NA         <NA>       <NA>
          pKa_Accept.Reference pKa_Donor pKa_Donor.Reference All.Species
1918-02-1                 <NA>      2.65         Strope 2018       Human
          Human.Clint Human.Clint.pValue Human.Clint.pValue.Reference
1918-02-1        3.11             0.0237                 Wetmore 2012
          Human.Clint.Reference Human.Fgutabs Human.Fgutabs.Reference
1918-02-1          Wetmore 2012            NA                    <NA>
          Human.Funbound.plasma Human.Funbound.plasma.Reference
1918-02-1                 0.000                    Wetmore 2012
          Human.Rblood2plasma Human.Rblood2plasma.Reference
1918-02-1                  NA                          <NA>
          Mouse.Funbound.plasma Mouse.Funbound.plasma.Reference
1918-02-1                  <NA>                            <NA>
          Rabbit.Funbound.plasma Rabbit.Funbound.plasma.Reference Rat.Clint
1918-02-1                   <NA>                             <NA>      <NA>
          Rat.Clint.pValue Rat.Clint.pValue.Reference Rat.Clint.Reference
1918-02-1               NA                       <NA>                <NA>
          Rat.Fgutabs Rat.Fgutabs.Reference Rat.Funbound.plasma
1918-02-1          NA                  <NA>                <NA>
          Rat.Funbound.plasma.Reference Rat.Rblood2plasma
1918-02-1                          <NA>                NA
          Rat.Rblood2plasma.Reference
1918-02-1                        <NA>
> 
> # Are all chemical names listed only once:
> length(unique(chem.prop$Compound))==dim(chem.prop)[1]
[1] FALSE
> # Are all CAS listed only once:
> length(unique(chem.prop$CAS))==dim(chem.prop)[1]
[1] TRUE
> 
> chem.physical_and_invitro.data <- chem.prop
> 
> if (unique(chem.physical_and_invitro.data$CAS) < dim(chem.physical_and_invitro.data)[1]) stop("Duplicated CAS numbers in chem.physical_and_invitro.data")
Warning message:
In if (unique(chem.physical_and_invitro.data$CAS) < dim(chem.physical_and_invitro.data)[1]) stop("Duplicated CAS numbers in chem.physical_and_invitro.data") :
  the condition has length > 1 and only the first element will be used
> if(any(sapply(chem.physical_and_invitro.data$CAS,function(x) !CAS.checksum(x)))) stop("Failed CAS checksum in chem.physical_and_invitro.data")
There were 50 or more warnings (use warnings() to see the first 50)
> 
> 
> cl <- read.xls('Pirovano-2016.xlsx',stringsAsFactors=F)
> chem.physical_and_invitro.data <- add_chemtable(cl,current.table=chem.physical_and_invitro.data,data.list=list(Compound='Compound',CAS='CAS',Clint='clint'),species='Human',reference='Pirovano 2016',overwrite=F)
> caf.cl <- subset(cl,CAS =='58-08-2')
> chem.physical_and_invitro.data <- add_chemtable(caf.cl,current.table=chem.physical_and_invitro.data,data.list=list(Compound='Compound',CAS='CAS',Clint='clint'),species='Human',reference='Pirovano 2016',overwrite=T)
> rb <- read.xls('Uchimura 2010 cas.xlsx',stringsAsFactors=F)
> chem.physical_and_invitro.data <- add_chemtable(rb,current.table=chem.physical_and_invitro.data,data.list=list(Compound='Name',Rblood2plasma='Human.Rb2p',Funbound.plasma='Human.fup',CAS='cas'),species='Human',reference='Uchimura 2010',overwrite=F)
Warning messages:
1: In CAS.checksum(this.CAS) : NAs introduced by coercion
2: In CAS.checksum(this.CAS) : NAs introduced by coercion
3: In CAS.checksum(this.CAS) : NAs introduced by coercion
4: In CAS.checksum(this.CAS) : NAs introduced by coercion
5: In CAS.checksum(this.CAS) : NAs introduced by coercion
6: In CAS.checksum(this.CAS) : NAs introduced by coercion
7: In CAS.checksum(this.CAS) : NAs introduced by coercion
8: In CAS.checksum(this.CAS) : NAs introduced by coercion
> rb <- subset(rb,!is.na(Rat.Rb2p))
> chem.physical_and_invitro.data <- add_chemtable(rb,current.table=chem.physical_and_invitro.data,data.list=list(Compound='Name',Rblood2plasma='Rat.Rb2p',Funbound.plasma='Rat.fup',CAS='cas'),species='Rat',reference='Uchimura 2010',overwrite=F)
There were 50 or more warnings (use warnings() to see the first 50)
> fub <- read.xls('Gulden 2002.xlsx',stringsAsFactors=F) 
> chem.physical_and_invitro.data <- add_chemtable(fub,current.table=chem.physical_and_invitro.data,data.list=list(Compound='Compound',Funbound.plasma='fup',CAS='CAS',MW='MW'),species='Human',reference='Gulden 2002',overwrite=F)
Warning messages:
1: In CAS.checksum(this.CAS) : NAs introduced by coercion
2: In CAS.checksum(this.CAS) : NAs introduced by coercion
3: In CAS.checksum(this.CAS) : NAs introduced by coercion
> brown <- read.xls('Brown 2007.xlsx',stringsAsFactors=F)
> chem.physical_and_invitro.data <- add_chemtable(brown,current.table=chem.physical_and_invitro.data,data.list=list(Compound='Compound',Clint='Clint',CAS='CAS'),species='Human',reference='Brown 2007',overwrite=T)
Warning messages:
1: In CAS.checksum(this.CAS) : NAs introduced by coercion
2: In CAS.checksum(this.CAS) : NAs introduced by coercion
> 
> #Add Clint data
> jones <- read.xlsx('Jones 2017 human in vitro clearance.xlsx',1)
> jones <- jones[3:12,1:3]
> colnames(jones) <- c('CAS','Compound','Clint')
> wood.rat <- read.xlsx('Wood_2017_Rat_Clint_CLh.xlsx',1)
> wood.rat <- subset(wood.rat,!is.na(Clint..uL.min.10.6.cells.) & Name != 'FK079') # No CAS for FK079
> wood.human <- read.xlsx('Wood 2017 Human Clint and CLh.xlsx',1)
> wood.human <- subset(wood.human,!is.na(Clint..uL.min.10.6.cells.))
> 
> sternbeck <- read.xlsx('Sternbeck Human Clearance.xlsx',1)
> chem.physical_and_invitro.data <- add_chemtable(jones,current.table=chem.physical_and_invitro.data,data.list=list(Compound='Compound',CAS='CAS',Clint='Clint'),species='Human',reference='Jones 2017',overwrite=T)
Warning messages:
1: In CAS.checksum(this.CAS) : NAs introduced by coercion
2: In CAS.checksum(this.CAS) : NAs introduced by coercion
3: In CAS.checksum(this.CAS) : NAs introduced by coercion
> chem.physical_and_invitro.data <- add_chemtable(wood.human,current.table=chem.physical_and_invitro.data,data.list=list(Compound='Name',CAS='CAS',Clint='Clint..uL.min.10.6.cells.'),species='Human',reference='Wood 2017',overwrite=T)
Warning messages:
1: In CAS.checksum(this.CAS) : NAs introduced by coercion
2: In CAS.checksum(this.CAS) : NAs introduced by coercion
3: In CAS.checksum(this.CAS) : NAs introduced by coercion
4: In CAS.checksum(this.CAS) : NAs introduced by coercion
5: In CAS.checksum(this.CAS) : NAs introduced by coercion
> chem.physical_and_invitro.data <- add_chemtable(wood.rat,current.table=chem.physical_and_invitro.data,data.list=list(Compound='Name',CAS='CASRN',Clint='Clint..uL.min.10.6.cells.'),species='Rat',reference='Wood 2017',overwrite=T)
Warning messages:
1: In CAS.checksum(this.CAS) : NAs introduced by coercion
2: In CAS.checksum(this.CAS) : NAs introduced by coercion
> # Add new fup from Wood 2017
> chem.physical_and_invitro.data <- add_chemtable(wood.human,current.table=chem.physical_and_invitro.data,data.list=list(Compound='Name',CAS='CAS',Funbound.plasma='fup'),species='Human',reference='Wood 2017',overwrite=F)
> chem.physical_and_invitro.data <- add_chemtable(wood.rat,current.table=chem.physical_and_invitro.data,data.list=list(Compound='Name',CAS='CASRN',Funbound.plasma='fup'),species='Rat',reference='Wood 2017',overwrite=F)
> #Add only 2 compounds with clint and fup, overwrite all Rb2p but paixao
> chem.physical_and_invitro.data <- add_chemtable(subset(sternbeck,Name %in% c('Etodolac','Bufuralol')),current.table=chem.physical_and_invitro.data,data.list=list(Compound='Name',CAS='CAS',Funbound.plasma='fup',Clint='Clint'),species='Human',reference='Sternbeck 2012',overwrite=T)
Warning message:
In CAS.checksum(this.CAS) : NAs introduced by coercion
> chem.physical_and_invitro.data <- add_chemtable(subset(sternbeck,!CAS %in% subset(chem.physical_and_invitro.data,Human.Rblood2plasma.Reference == 'Paixao 2012')[,'CAS']),current.table=chem.physical_and_invitro.data,data.list=list(Compound='Name',CAS='CAS',Rblood2plasma='Rb'),species='Human',reference='Sternbeck 2012',overwrite=T)
> 
> 
> #Remove overwritten clint pvalues
> for(this.cas in subset(chem.physical_and_invitro.data,Human.Clint.pValue.Reference != Human.Clint.Reference)[,'CAS']) chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == this.cas),'Human.Clint.pValue'] <- chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == this.cas),'Human.Clint.pValue.Reference'] <- NA
> 
> # Load partition coefficient data from Pearce 2017:
> pc.data.raw <- read.xls('PC_Data.xlsx',stringsAsFactors=F)
> pc.data.table <- subset(pc.data.raw,tolower(Species)=='rat')
> pc.data.table[which(pc.data.table[,'CAS'] %in% c('10457-90-6','5786-21-0','17617-23-1','69-23-8','2898-12-6','57562-99-9','59-99-4','2955-38-6','155-97-5','41903-57-5','58-55-9','77-32-7','59-05-2','60-54-8')),'fu'] <- NA
> #pc.data <- subset(pc.data, Tissue %in% c("Adipose","Bone","Brain","Gut","Heart","Kidney","Liver","Lung","Muscle","Skin","Spleen","Blood Cells") & Species == 'Rat')   
> chem.physical_and_invitro.data <- add_chemtable(pc.data.table,
+                                                 current.table=chem.physical_and_invitro.data,
+                                                 data.list=list(Compound='Drug',
+                                                                CAS='CAS',
+                                                                Funbound.plasma='fu',
+                                                                Species='Species',
+                                                                logP='LogP',
+                                                                logMA='logMA',
+                                                                pKa_Donor='Donor',
+                                                                pKa_Accept='Accept'),
+                                                 reference='Pearce 2017',
+                                                 overwrite=T)
There were 50 or more warnings (use warnings() to see the first 50)
> 
> pc.data <- pc.data.raw[,c('CAS','Drug','Tissue','Species','fu','A.B.N','LogP','Exp_PC')]
> 
> 
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '37517-30-9'),'All.Compound.Names'] <- 'Acebutolol'
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '28434-00-6'),'Compound'] <- chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '28434-00-6'),'All.Compound.Names'] <- 's-bioallethrin'
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '119-90-4'),'Compound'] <- chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '119-90-4'),'All.Compound.Names'] <-  "3,3'-dimethoxybenzidine"
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '1951-25-3'),'Compound'] <- chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '1951-25-3'),'All.Compound.Names'] <-  "Amiodarone"
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '357-70-0'),'Compound'] <- chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '357-70-0'),'All.Compound.Names']  <-  "Galantamine"
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '57-41-0'),'Compound'] <-  "Phenytoin"
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '330-54-1'),'Compound'] <- chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '330-54-1'),'All.Compound.Names']  <-  "Diuron"
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '91524-16-2'),'Compound'] <- chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '91524-16-2'),'All.Compound.Names']  <-  "Timolol hemihydrate"
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '101193-40-2'),'All.Compound.Names'] <- 'Quinotolast'
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '77-28-1'),'All.Compound.Names'] <- 'Butylbarbitone|Butethal [nf]|Butethal'
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '65216-93-5'),'All.Compound.Names'] <- 'Ethoxycoumarin|3-ethoxychromen-2-one'
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '509-86-4'),'All.Compound.Names'] <- 'Heptabarbitone|Heptabarbital'
> chem.physical_and_invitro.data[which(chem.physical_and_invitro.data[,'CAS'] == '58-08-2'),'Compound'] <- 'Caffeine'
> 
> #Honda 2019:
> load("Honda2019/wetmore_fup.RData") #Some where rat fups were inappropriately truncated
> wetmore.fup <- as.data.frame(wetmore.fup)
> chem.physical_and_invitro.data <- add_chemtable(wetmore.fup,
+                                                 current.table=chem.physical_and_invitro.data,
+                                                 data.list=list(CAS="casrn",
+                                                                Funbound.plasma="fup"),
+                                                 reference="Wetmore 2013",
+                                                 species="Rat",
+                                                 overwrite=T)
> # New chemicals:
> load("Honda2019/full_new_rat_04Dec2018.RData")
> full.new.rat <- as.data.frame(full.new.rat)
> full.new.rat <- subset(full.new.rat,use_fup|use_clint)
> 
> chemprop.new.rat <- unique(full.new.rat[,c("casrn",
+                                            "DSSTox_Substance_Id",
+                                            "logP",
+                                            "MW",
+                                            "pKa_Accept",
+                                            "pKa_Donor",
+                                            "preferred_name")])
> # update phys-chem props
> chem.physical_and_invitro.data <- add_chemtable(chemprop.new.rat,
+                                                 current.table=chem.physical_and_invitro.data,
+                                                  data.list=list(CAS="casrn",
+                                                                 DTXSID="DSSTox_Substance_Id",
+                                                                 LogP="logP",MW="MW",
+                                                                 pKa_Accept="pKa_Accept",
+                                                                 pKa_Donor="pKa_Donor",
+                                                                 Compound = "preferred_name"),
+                                                  reference="Honda 2019",
+                                                  species="Rat",
+                                                  overwrite=T)
There were 50 or more warnings (use warnings() to see the first 50)
> 
> 
> # only use the clints that greg identified as good:
> chem.physical_and_invitro.data <- add_chemtable(subset(full.new.rat,use_clint),
+                                                 current.table=chem.physical_and_invitro.data,
+                                                 data.list=list(CAS="casrn",
+                                                                DTXSID="DSSTox_Substance_Id",
+                                                                Clint="clearance",
+                                                                Compound = "preferred_name"),
+                                                 reference="Honda 2019",
+                                                 species="Rat",
+                                                 overwrite=T)
There were 50 or more warnings (use warnings() to see the first 50)
> # only use the fups that greg identified as good:
> chem.physical_and_invitro.data <- add_chemtable(subset(full.new.rat,use_fup),
+                                                 current.table=chem.physical_and_invitro.data,
+                                                 data.list=list(CAS="casrn",
+                                                                DTXSID="DSSTox_Substance_Id",
+                                                                Funbound.plasma="Funbound.plasma",
+                                                                Compound = "preferred_name"),
+                                                 reference="Honda 2019",
+                                                 species="Rat",
+                                                 overwrite=T)
There were 50 or more warnings (use warnings() to see the first 50)
> 
> #Load data from Wambaugh 2019:
> 
> load("New-HTTK-raw-2019-05-06.RData")
> 
> new.httk.data$Human.Clint <- paste(signif(new.httk.data$Human.Clint,3),
+                                     signif(new.httk.data$Human.Clint.Low95,3),
+                                     signif(new.httk.data$Human.Clint.High95,3),
+                                     signif(new.httk.data$Human.Clint.pValue,3),sep=",")
> new.httk.data$Human.Funbound.plasma <- paste(signif(new.httk.data$Human.Funbound.plasma,3),
+                                    signif(new.httk.data$Human.Funbound.plasma.Low95,3),
+                                    signif(new.httk.data$Human.Funbound.plasma.High95,3),
+                                    sep=",")
> new.httk.data[new.httk.data$Human.Clint=="NA,NA,NA,NA", "Human.Clint"] <- NA
> new.httk.data[new.httk.data$Human.Funbound.plasma=="NA,NA,NA", "Human.Funbound.plasma"] <-NA
>                                    
> 
> chem.physical_and_invitro.data <- add_chemtable(new.httk.data,
+   current.table=chem.physical_and_invitro.data,
+   data.list=list(Compound="Compound",
+     CAS="CAS",
+     DTXSID="DSSTox_Substance_Id",
+     Clint="Human.Clint",
+     Clint.pValue="Human.Clint.pValue",
+     Funbound.plasma="Human.Funbound.plasma",
+     LogP="logP",MW="MW",
+     pKa_Accept="pKa_Accept",
+     pKa_Donor="pKa_Donor",
+     SMILES.desalt="SMILES"),
+   reference="Wambaugh 2019",
+   species="Human",
+   overwrite=T)
There were 50 or more warnings (use warnings() to see the first 50)
> 
> #
> # Load predictions from Sipes 2017:
> #
> sipes2017 <- readRDS("ADMET.data.table.RData")
> 
> # Replace "bad" CAS:
> sipes.bad.cas <- read.xls("SipesBadCAS.xls",stringsAsFactors=F)
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
> for (this.row in 1:dim(sipes.bad.cas)[1])
+ {
+   index <- which(sipes2017$Compound==sipes.bad.cas[this.row,"INPUT"])
+   sipes2017[index,"Compound"] <- sipes.bad.cas[this.row,"PREFERRED_NAME"]
+   sipes2017[index,"CAS"] <- sipes.bad.cas[this.row,"CASRN"]
+ }
> 
> # Store the chemical physprop, but don't add Fup and Clint yet:
> chem.physical_and_invitro.data <- add_chemtable(sipes2017,
+                                   current.table=chem.physical_and_invitro.data,
+                                   data.list=list(Compound='Compound', 
+                                     CAS='CAS',
+                          #           DTXSID="DTXSID", 
+                                     MW = 'MW', 
+                                     logP = 'logP',
+                                     pKa_Donor = 'pKa_Donor', 
+                                     pKa_Accept = 'pKa_Accept',
+                                     SMILES.desalt = 'SMILES.desalt'),
+                                   reference = 'Sipes 2017', 
+                                   species= 'Human', 
+                                   overwrite=F)
There were 50 or more warnings (use warnings() to see the first 50)
> 
> 
> # ADD NEW DATA HERE:
> JRC.data.clint <- read.xls(
+   "APCRA-JRC_HepatocyteStability+ProteinBinding_77_Summary.xlsx",
+   sheet=2,
+   stringsAsFactors=F)
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
> colnames(JRC.data.clint)[5] <- "Conc"
> colnames(JRC.data.clint)[8] <- "Clint"
> JRC.data.clint <- subset(JRC.data.clint,!is.na(Clint)) 
> JRC.data.clint2 <- NULL
> for (this.id in unique(JRC.data.clint$DTXSID))
+ {
+   this.subset <- subset(JRC.data.clint,DTXSID==this.id)
+   this.row <- subset(this.subset,Conc==
+     min(this.subset$Conc))
+   JRC.data.clint2 <- rbind(JRC.data.clint2,this.row)
+ } 
> chem.physical_and_invitro.data <- add_chemtable(JRC.data.clint2,
+                                   current.table=chem.physical_and_invitro.data,
+                                   data.list = list(
+                                     Compound='Compound.Name',
+                                     CAS = 'CASRN',
+                                     DTXSID='DTXSID',
+                                     Clint="Clint"),
+                                   overwrite=T,
+                                   reference = 'Paini 2020',
+                                   species="Human")
There were 50 or more warnings (use warnings() to see the first 50)
> 
> JRC.data.fup <- read.xls(
+   "APCRA-JRC_HepatocyteStability+ProteinBinding_77_Summary.xlsx",
+   sheet=3,
+   stringsAsFactors=F)
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
Wide character in print at C:/Users/SDAVID01/AppData/Local/renv/cache/v5/R-4.0/x86_64-w64-mingw32/gdata/2.18.0/465ccb84427f5fe2c54f8620666db131/gdata/perl/xls2csv.pl line 327.
> JRC.data.fup <- subset(JRC.data.fup,!is.na(X..Unbound.in.Plasma..))
> JRC.data.fup$fup <- JRC.data.fup$X..Unbound.in.Plasma../100
> JRC.data.fup[,"fup.up"] <- JRC.data.fup$fup + 1.96*JRC.data.fup$SD/100
> JRC.data.fup[,"fup.low"] <- JRC.data.fup$fup - 1.96*JRC.data.fup$SD/100
> JRC.data.fup[JRC.data.fup$fup>1,"fup"] <- 1
> JRC.data.fup[JRC.data.fup$fup<0,"fup"] <- 0
> JRC.data.fup[JRC.data.fup$fup.up>1,"fup.up"] <- 1
> JRC.data.fup[JRC.data.fup$fup.low>1,"fup.low"] <- 1
> JRC.data.fup[JRC.data.fup$fup.low<0,"fup.low"] <- 0
> JRC.data.fup[JRC.data.fup$fup.up<0,"fup.up"] <- 0
> JRC.data.fup$fup <- paste(signif(JRC.data.fup$fup,4),
+   signif(JRC.data.fup$fup.low,4),
+   signif(JRC.data.fup$fup.up,4),
+   sep=",")
> chem.physical_and_invitro.data <- add_chemtable(JRC.data.fup,
+                                   current.table=chem.physical_and_invitro.data,
+                                   data.list = list(
+                                     Compound='Compound_ID',
+                                     CAS = 'CASRN',
+                                     DTXSID='DTXSID',
+                                     Funbound.plasma='fup'),
+                                   overwrite=T,
+                                   reference = 'Paini 2020',
+                                   species="Human")
There were 50 or more warnings (use warnings() to see the first 50)
>                                   
> volatile.data.raw <- read.csv('Linakis2020.csv',stringsAsFactors = F)
> 
> chem.physical_and_invitro.data <- add_chemtable(volatile.data.raw,
+                 current.table = chem.physical_and_invitro.data, 
+                 data.list = list(Compound='PREFERRED_NAME',
+                                  CAS = 'CASRN',DTXSID='DTXSID',
+                                  LogP="OCTANOL_WATER_PARTITION_LOGP_OPERA_PRED",
+                                  LogHenry='LOG_HENRYS_LAW_DIMENSIONLESS',
+                                  MW = 'AVERAGE_MASS',SMILES.desalt='QSAR_READY_SMILES',
+                                  Species='SPECIES'),overwrite=F,reference='Linakis 2020')
There were 50 or more warnings (use warnings() to see the first 50)
> 
> chem.physical_and_invitro.data <- add_chemtable(volatile.data.raw,
+                                   current.table=chem.physical_and_invitro.data,
+                                   data.list = list(Compound='PREFERRED_NAME',
+                                   CAS = 'CASRN',DTXSID='DTXSID',Clint='CALC_CLINT',
+                                   Funbound.plasma='CALC_FUP',
+                                   Species='SPECIES'),overwrite=F,reference='Linakis 2020')
> 
> 
> # STOP ADDING NEW DATA AFTER THIS, SUBSEQUENT CODE IS TO INTERACT WITH DASHBOARD
> 
> #
> # STOP TO GET NEW PHYSCHEM
> #
> 
> # Update with DSSTox Information
> # Have to chop this into chunks because the dashboard batch mode can't handle
> # more than 5000 chemicals at once (going with 2000 now for sanity's sake)
> blocks <- seq(1,dim(chem.physical_and_invitro.data)[1],2000)
> blocks <- c(blocks,dim(chem.physical_and_invitro.data)[1]+1)
> for (i in 1:(length(blocks)-1))
+ {
+   write.table(chem.physical_and_invitro.data[blocks[i]:(blocks[i+1]-1),"CAS"],
+     file=paste("HTTK-ChemIDs-",i,".txt",sep=""),
+     row.names=F,
+     sep="\t",
+     col.names=F,
+     quote=F)
+   cat(paste("Chemical ID's written to HTTK-ChemIDs-",i,".txt,\n",sep=""))
+   cat(" use that file to Batch Search based on CAS.\n")
+   cat(paste("Save Dashboard output to HTTK-DSSTox-output-",i,".xls.\n",sep=""))
+ }
Chemical ID's written to HTTK-ChemIDs-1.txt,
 use that file to Batch Search based on CAS.
Save Dashboard output to HTTK-DSSTox-output-1.xls.
Chemical ID's written to HTTK-ChemIDs-2.txt,
 use that file to Batch Search based on CAS.
Save Dashboard output to HTTK-DSSTox-output-2.xls.
Chemical ID's written to HTTK-ChemIDs-3.txt,
 use that file to Batch Search based on CAS.
Save Dashboard output to HTTK-DSSTox-output-3.xls.
Chemical ID's written to HTTK-ChemIDs-4.txt,
 use that file to Batch Search based on CAS.
Save Dashboard output to HTTK-DSSTox-output-4.xls.
Chemical ID's written to HTTK-ChemIDs-5.txt,
 use that file to Batch Search based on CAS.
Save Dashboard output to HTTK-DSSTox-output-5.xls.
> cat("Download CAS, MW (average mass), desalted (QSAR-ready) SMILES,\n")
Download CAS, MW (average mass), desalted (QSAR-ready) SMILES,
> cat(" formula, DTXSIDs, and OPERA properties.\n")
 formula, DTXSIDs, and OPERA properties.
> cat("Enter \"c\" to continue when ready.\n")
Enter "c" to continue when ready.
> browser()
Called from: top level 
Browse[1]> 
> #
> # WAIT UNTIL TABLE IS DOWNLOADED FROM DASHBOARD
> #
> 
> 
> #
> # READ IN DSSTOX INFORMATION
> #
> dsstox <- NULL
> for (i in 1:(length(blocks)-1))
+ {
+   dsstox <- rbind(dsstox,read.xlsx(paste("HTTK-DSSTox-output-",i,".xls",sep=""),
+     stringsAsFactors=F,1))
+ }
> 
> # Get rid of the ones that weren't found:
> dsstox <- subset(dsstox,DTXSID!="-")
> dsstox[,"logHenry"] <- log10(as.numeric(dsstox$HENRYS_LAW_ATM.M3.MOLE_OPERA_PRED))
Warning message:
NAs introduced by coercion 
> dsstox[,"logWSol"] <- log10(as.numeric(dsstox$WATER_SOLUBILITY_MOL.L_OPERA_PRED))
Warning message:
NAs introduced by coercion 
> chem.physical_and_invitro.data <- add_chemtable(subset(dsstox,!is.na(CASRN)),
+                                     current.table = chem.physical_and_invitro.data,
+                                     data.list=list(Compound='PREFERRED_NAME',
+                                                    CAS='CASRN',
+                                                    DTXSID="DTXSID",
+                                                    MW='AVERAGE_MASS',
+                                                    SMILES.desalt='QSAR_READY_SMILES',
+                                                    Formula="MOLECULAR_FORMULA",
+                                                    logP="OCTANOL_WATER_PARTITION_LOGP_OPERA_PRED",
+                                                    logHenry = "logHenry",
+                                                    logWSol = "logWSol",
+                                                    MP = "MELTING_POINT_DEGC_OPERA_PRED"
+                                                    ),
+                                     reference="EPA",
+                                     overwrite=T)
There were 50 or more warnings (use warnings() to see the first 50)
> 
> EPA.ref <- paste('CompTox Dashboard',Sys.Date())
> 
> 
> #
> # STOP TO TRY TO FIND CHEMICALS WHERE CAS DID NOT WORK
> #
> 
> # Get the chemicals we couldn't find by CAS
> write.table(subset(chem.physical_and_invitro.data,
+   is.na(DTXSID))[,"Compound"],
+   file="HTTK-NoCASMatch-ChemIDs.txt",
+   row.names=F,
+   sep="\t",
+   col.names=F,
+   quote=F)
> cat("Chemical with NA DTXSID's written to HTTK-NoCASMatch-ChemIDs.txt, use that file to search baed on CAS. \n")
Chemical with NA DTXSID's written to HTTK-NoCASMatch-ChemIDs.txt, use that file to search baed on CAS. 
> cat("Download CAS, MW, desalted (QSAR-ready) SMILES, forumula, DTXSIDs, and OPERA properties.\n")
Download CAS, MW, desalted (QSAR-ready) SMILES, forumula, DTXSIDs, and OPERA properties.
> cat("Save Dashboard output to HTTK-NoCASMatch-DSSTox-output.xls.\n")
Save Dashboard output to HTTK-NoCASMatch-DSSTox-output.xls.
> cat("Enter \"c\" to continue when ready.\n")
Enter "c" to continue when ready.
> browser()
Called from: top level 
Browse[1]> dsstox <- read.xlsx("HTTK-NoCASMatch-DSSTox-output.xls",stringsAsFactors=F,1)
Browse[1]> # Get rid of the ones that weren't found:
Browse[1]> dsstox <- subset(dsstox,DTXSID!="-")
Browse[1]> dsstox[,"logHenry"] <- log10(as.numeric(dsstox$HENRYS_LAW_ATM.M3.MOLE_OPERA_PRED))
Browse[1]> dsstox[,"logWSol"] <- log10(as.numeric(dsstox$WATER_SOLUBILITY_MOL.L_OPERA_PRED))
Browse[1]> 
> # Replace any bad CASRN's:
> for (this.row in 1:dim(dsstox)[1])
+ {
+   chem.physical_and_invitro.data[
+     chem.physical_and_invitro.data$Compound ==
+     dsstox[this.row,"PREFERRED_NAME"],"CAS"] <-
+     dsstox[this.row,"CASRN"]
+ }
> 
> chem.physical_and_invitro.data <- add_chemtable(subset(dsstox,!is.na(CASRN)),
+                                     current.table = chem.physical_and_invitro.data,
+                                     data.list=list(Compound='PREFERRED_NAME',
+                                                    CAS='CASRN',
+                                                    DTXSID="DTXSID",
+                                                    MW='AVERAGE_MASS',
+                                                    SMILES.desalt='QSAR_READY_SMILES',
+                                                    Formula="MOLECULAR_FORMULA",
+                                                    logP="OCTANOL_WATER_PARTITION_LOGP_OPERA_PRED",
+                                                    logHenry = "logHenry",
+                                                    logWSol = "logWSol",
+                                                    MP = "MELTING_POINT_DEGC_OPERA_PRED"
+                                                    ),
+                                     reference="EPA",
+                                     overwrite=T)
There were 50 or more warnings (use warnings() to see the first 50)
> 
> # Some chemicals are missing from DSStox OPERA predictions:
> new.opera <- read.csv('MissingPhysChem.csv',stringsAsFactors=F) 
> colnames(new.opera)[1] <- "INPUT"
> new.opera[,"logHenry"] <- log10(as.numeric(new.opera$HENRYS_LAW_ATM.M3.MOLE_OPERA_PRED))
Warning message:
NAs introduced by coercion 
> new.opera[,"logWSol"] <- log10(as.numeric(new.opera$WATER_SOLUBILITY_MOL.L_OPERA_PRED))
Warning message:
NAs introduced by coercion 
> chem.physical_and_invitro.data <- add_chemtable(new.opera,current.table = chem.physical_and_invitro.data,
+                                                 data.list=list(CAS='CASRN',
+                                                                Compound='INPUT',
+                                                                logP='OCTANOL_WATER_PARTITION_LOGP_OPERA_PRED',
+                                                                logHenry = "logHenry",
+                                                                logWSol = "logWSol",
+                                                                MP = "MELTING_POINT_DEGC_OPERA_PRED",
+                                                                MW='AVERAGE_MASS'),
+                                                 reference='OPERA')
Warning messages:
1: In augment.table(current.table, this.CAS, this.compound, this.property = this.data,  :
  NAs introduced by coercion
2: In augment.table(current.table, this.CAS, this.compound, this.property = this.data,  :
  NAs introduced by coercion
> 
> # Not sure how to get water:air patition coefficient from OPERA 
> # (need to check into Henry's law coefficient)
> # Use EPI Suite for now
> load("chemprops-072115.RData")
> #Dashboard doesn't like this CAS:
> chemprop.table[chemprop.table$CASRN=="51630-58-1","CASRN"] <- "67614-33-9"
> chemprop.table <- subset(chemprop.table,CASRN%in%chem.physical_and_invitro.data[,"CAS"])
> chemprop.table$logHenry <- log10(as.numeric(chemprop.table$Henry))
> chem.physical_and_invitro.data <- add_chemtable(chemprop.table,
+                                                 current.table = chem.physical_and_invitro.data,
+                                                 data.list=list(CAS="CASRN",
+                                                                logHenry="logHenry",
+                                                                logP="LogP",
+                                                                MP="MP",
+                                                                MW="MolecularWeight",
+                                                                logPwa="logPwa37p5"),
+                                                 reference="EPISuite")
There were 24 warnings (use warnings() to see them)
> 
> #Add Strope 2018 new pKa
> load('Strope2018.RData')
> cas.donor.overwrite <- subset(chem.physical_and_invitro.data,pKa_Donor.Reference %in% c('Strope 2018','Strope 2018'))[,'CAS']
> cas.accept.overwrite <- subset(chem.physical_and_invitro.data,pKa_Accept.Reference %in% c('Strope 2018','Strope 2018'))[,'CAS']
> cory.donor.overwrite <- subset(CorypKaTable,CASRN.DSStox %in% cas.donor.overwrite)
> cory.accept.overwrite <- subset(CorypKaTable,CASRN.DSStox %in% cas.accept.overwrite)
> chem.physical_and_invitro.data <- add_chemtable(cory.accept.overwrite,current.table=chem.physical_and_invitro.data,data.list=list(CAS='CASRN.DSStox',pKa_Accept='Accept'),reference='Strope 2018',overwrite=T)
There were 50 or more warnings (use warnings() to see the first 50)
> chem.physical_and_invitro.data <- add_chemtable(cory.donor.overwrite,current.table=chem.physical_and_invitro.data,data.list=list(CAS='CASRN.DSStox',pKa_Donor='Donor'),reference='Strope 2018',overwrite=T)
There were 50 or more warnings (use warnings() to see the first 50)
>    
> #Annotate important chemicals classes as concatonated list:
> chem.physical_and_invitro.data[,"Chemical.Class"] <- ""
> 
> #PFAS:
> PFAS <- read.csv("Dashboard-PFASMaster-091620.tsv",sep="\t")
> chem.physical_and_invitro.data[
+   chem.physical_and_invitro.data[,"DTXSID"] %in% PFAS[,"DTXSID"],
+   "Chemical.Class"] <- sapply(chem.physical_and_invitro.data[
+     chem.physical_and_invitro.data[,"DTXSID"] %in% PFAS[,"DTXSID"],
+     "Chemical.Class"], function(x) ifelse(x=="","PFAS",paste(x,"PFAS",sep=","))) 
> #
> # END TABLE chem.physical_and_invitro.data 
> #
> 
> 
> 
> 
> 
> 
> 
> #
> # CREATE TABLE Wetmore.data
> #
> 
> Wetmore.data <- read.xls("Supp_Table_8_SimCyp_IVIVE_input_output_083011.xls",stringsAsFactors=F,skip=1)
> 
> Wetmore.data.1 <- Wetmore.data[Wetmore.data[,"Concentration..uM."]==1,]
> Wetmore.data.10 <- Wetmore.data[Wetmore.data[,"Concentration..uM."]==10,]
> Wetmore.data.abridged <- NULL
> Wetmore.data.1.CASlist <- unique(Wetmore.data.1[,"CASRN"])
> Wetmore.data.10.CASlist <- unique(Wetmore.data.10[,"CASRN"])
> good.cols <- c(1:19)
> for (this.CAS in unique(Wetmore.data[,"CASRN"]))
+ {
+   if (this.CAS %in% Wetmore.data.1.CASlist) Wetmore.data.abridged <- rbind(Wetmore.data.abridged,Wetmore.data.1[Wetmore.data.1[,"CASRN"]==this.CAS,good.cols][1,])
+   if (this.CAS %in% Wetmore.data.10.CASlist) Wetmore.data.abridged <- rbind(Wetmore.data.abridged,Wetmore.data.10[Wetmore.data.10[,"CASRN"]==this.CAS,good.cols][1,])
+ }
> Wetmore.data.abridged <- cbind(Wetmore.data.abridged,"Human")
> colnames(Wetmore.data.abridged)[20] <- "Species"
> Wetmore.data.abridged$Reference <- "Wetmore 2012"
> 
> Wetmore.rat.data <- read.xls("toxsci_12_0787_File012.xls",skip=2,stringsAsFactors=F)
> Wetmore.rat.data.1 <- Wetmore.rat.data[Wetmore.rat.data[,"Conc.uM."]==1,]
> Wetmore.rat.data.10 <- Wetmore.rat.data[Wetmore.rat.data[,"Conc.uM."]==10,]
> Wetmore.rat.data.abridged <- NULL
> Wetmore.rat.data.1.CASlist <- unique(Wetmore.rat.data.1[,"CASRN"])
> Wetmore.rat.data.10.CASlist <- unique(Wetmore.rat.data.10[,"CASRN"])
> good.cols <- c(1,2,3,4,9,9,5,10,6,11,7,8,12,15,16)
> for (this.CAS in unique(Wetmore.rat.data[,"CASRN"]))
+ {
+   if (this.CAS %in% Wetmore.rat.data.1.CASlist) Wetmore.rat.data.abridged <- rbind(Wetmore.rat.data.abridged,Wetmore.rat.data.1[Wetmore.rat.data.1[,"CASRN"]==this.CAS,good.cols][1,])
+   if (this.CAS %in% Wetmore.rat.data.10.CASlist) Wetmore.rat.data.abridged <- rbind(Wetmore.rat.data.abridged,Wetmore.rat.data.10[Wetmore.rat.data.10[,"CASRN"]==this.CAS,good.cols][1,])
+ }
> 
> Wetmore.rat.data.abridged[,5] <- Wetmore.rat.data.abridged[,5]*100
> Wetmore.rat.data.abridged <- cbind(Wetmore.rat.data.abridged,NA)
> Wetmore.rat.data.abridged <- cbind(Wetmore.rat.data.abridged,NA)
> Wetmore.rat.data.abridged <- cbind(Wetmore.rat.data.abridged,NA)
> Wetmore.rat.data.abridged <- cbind(Wetmore.rat.data.abridged,NA)
> Wetmore.rat.data.abridged <- cbind(Wetmore.rat.data.abridged,"Rat")
> Wetmore.rat.data.abridged[,18] <- Wetmore.rat.data.abridged[,15]
> Wetmore.rat.data.abridged[,15] <- Wetmore.rat.data.abridged[,14]
> Wetmore.rat.data.abridged[,14] <- NA
> Wetmore.rat.data.abridged$Reference <- "Wetmore 2013"
> colnames(Wetmore.rat.data.abridged) <- colnames(Wetmore.data.abridged)
> 
> Wetmore.data <- rbind(Wetmore.data.abridged,Wetmore.rat.data.abridged)
> colnames(Wetmore.data)[2] <- "CAS"
> 
> #Get rid of mixture milbemectin:
> Wetmore.data <- Wetmore.data[Wetmore.data$CAS!="51596-11-3",]
> 
> WetmorePhaseII.css.table <- read.xls("Supp_Table_4_122914.xlsx",sheet=5,skip=0,stringsAsFactors=F)
> 
> for (this.cas in unique(WetmorePhaseII.css.table$CASRN))
+ {
+   this.row <- Wetmore.data[1,]
+   this.row[] <- NA
+   this.row["Species"] <- "Human"
+   fub.index <- which(WetmorePhaseII.fup.table$CAS == this.cas)[1]
+   clint.index <- which(WetmorePhaseII.clint.table$X.1 == this.cas)[1]
+   this.row["Compound"] <- WetmorePhaseII.fup.table[fub.index,"Name"]
+   this.row["CAS"] <- this.cas
+   this.row["Reference"] <- "Wetmore 2015"
+   if (this.cas %in% WetmorePhaseII.css.table$CASRN)
+   {
+     for (this.conc in unique(subset(WetmorePhaseII.css.table,CASRN==this.cas)$Conc))
+     {
+       this.row["Concentration..uM."] <- this.conc
+       css.index <- which(WetmorePhaseII.css.table$CASRN == this.cas & WetmorePhaseII.css.table$Conc==this.conc)[1]
+       this.row["MW"] <- WetmorePhaseII.css.table[css.index,"Molec.Wt."]
+       this.row["Raw.Experimental.Percentage.Unbound"] <- WetmorePhaseII.css.table[css.index,"Fu"]*100
+       this.row["Entered.Experimental.Percentage.Unbound"] <- WetmorePhaseII.css.table[css.index,"Fu.2"]*100
+       if (WetmorePhaseII.css.table[css.index,"Fu.1"]=="Def") this.row["source_PPB"] <- "D"
+       else this.row["source_PPB"] <- "E" 
+       this.row["Renal_Clearance"] <- WetmorePhaseII.css.table[css.index,"Renal.Cl"]
+       this.row["Css_lower_5th_perc.uM."] <- WetmorePhaseII.css.table[css.index,"Css_Lower_5th_perc.uM."]
+       this.row["Css_median_perc.uM."] <- WetmorePhaseII.css.table[css.index,"Css_Median_perc.uM."]
+       this.row["Css_upper_95th_perc.uM."] <- WetmorePhaseII.css.table[css.index,"Css_upper_95th_perc.uM."]
+       this.row["Css_lower_5th_perc.mg.L."] <- WetmorePhaseII.css.table[css.index,"Css_Lower_5th_perc.uM."]/10^6*this.row["MW"]*1000
+       this.row["Css_median_perc.mg.L."] <- WetmorePhaseII.css.table[css.index,"Css_Median_perc.uM."]/10^6*this.row["MW"]*1000
+       this.row["Css_upper_95th_perc.mg.L."] <- WetmorePhaseII.css.table[css.index,"Css_upper_95th_perc.uM."]/10^6*this.row["MW"]*1000
+       this.row["Fub"] <-  WetmorePhaseII.css.table[css.index,"Fu"]
+       this.row["Met_Stab"] <- NA
+       this.row["Met_Stab_entered"] <- WetmorePhaseII.css.table[css.index,"Met.Stab.Ent"]
+       this.row["r2"] <- NA
+       this.row["p.val"] <- NA
+       Wetmore.data <- rbind(Wetmore.data,this.row)    
+     }
+   }
+ }
> 
> if (any(duplicated(Wetmore.data))) stop("Duplicate entries in Wetmore.data")
> 
> #
> # END TABLE Wetmore.data
> #
> 
> 
> 
> 
> #
> # CREATE chem.lists 
> #
> 
> # Read in the Tox21 and ToxCast lists from the Dashboard
> Tox21 <- read.csv("Dashboard-Tox21.tsv",stringsAsFactors=F,sep="\t")
> ToxCast <- read.csv("Dashboard-Tox21.tsv",stringsAsFactors=F,sep="\t")
> DrugBank <- read.csv("Dashboard-DrugBank.tsv",stringsAsFactors=F,sep="\t")
> 
> NHANES.serum <- read.xls("ACT-p2m-20150330.xlsx",sheet=1,stringsAsFactors=F)
> NHANES.blood <- read.xls("ACT-p2m-20150330.xlsx",sheet=2,stringsAsFactors=F)
> NHANES.urine <- read.xls("ACT-p2m-20150330.xlsx",sheet=3,stringsAsFactors=F)
> 
> chem.lists <- list()
> chem.lists[["NHANES.serum.parent"]] <- NHANES.serum[-1,c(1,3)]
> chem.lists[["NHANES.serum.analyte"]] <- NHANES.serum[-1,c(4,6)]
> chem.lists[["NHANES.blood.parent"]] <- NHANES.blood[-1,1:2]
> chem.lists[["NHANES.blood.analyte"]] <- NHANES.blood[-1,3:4]
> chem.lists[["NHANES.urine.parent"]] <- NHANES.urine[-1,1:2]
> chem.lists[["NHANES.urine.analyte"]] <- NHANES.urine[-1,4:5]
> #chem.lists[["EPA.invivo"]] <- EPAinvivo[EPAinvivo[,"In.Vivo.TK.Study.Underway"]=="Y",1:2]
> chem.lists[["Tox21"]] <- Tox21[,c(2:3,1)]
> chem.lists[["ToxCast"]] <- ToxCast[,c(2:3,1)]
> chem.lists[["DrugBank"]] <- DrugBank[,c(2:3,1)]
> 
> for(i in 1:length(chem.lists))
+ {
+   colnames(chem.lists[[i]]) <- c("Compound","CAS")
+   chem.lists[[i]] <- chem.lists[[i]][!duplicated(chem.lists[[i]]),]
+ #  chem.lists[[i]] <- chem.lists[[i]][sapply(chem.lists[[i]][,2],CAS.checksum),]
+ }
> chem.lists[["NHANES"]] <- rbind(chem.lists[["NHANES.serum.parent"]],chem.lists[["NHANES.serum.analyte"]],chem.lists[["NHANES.blood.parent"]],chem.lists[["NHANES.blood.analyte"]],chem.lists[["NHANES.urine.parent"]],chem.lists[["NHANES.urine.analyte"]])
> chem.lists[["NHANES"]] <- chem.lists[["NHANES"]][!duplicated(chem.lists[["NHANES"]]$CAS),]
> 
> #
> # END chem.lists 
> #
> 
> 
> #
> # Create dawson2021 Data
> #
> ## R Package ##
> library(readxl)
Warning message:
package 'readxl' was built under R version 4.0.5 
> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:gdata':

    combine, first, last

The following object is masked from 'package:reshape':

    rename

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(magrittr)
> ## Load in Data ##
> dawson2021_full <- readxl::read_xlsx(
+   path = "S2_Dawson et al. Supporting_Information_Revision_Final_Sharing.xlsx",
+   sheet = 14)
> dawson2021      <- dawson2021_full[,c("CASRN","QSAR Clint","Outlier","QSAR Fup","AD_out")]
> #
> # END dawson2021 Creation
> #
> 
> #Add in vivo data from Wambaugh (2018):
> load('NewInVivoTablesForHTTK.RData')
> 
> 
> if (dim(subset(chem.physical_and_invitro.data,duplicated(Compound)))[1]>0) 
+ {
+   cat("There are instances of chemicals with same names but differing in other properties.\n")
+   dup.chems <- subset(chem.physical_and_invitro.data,duplicated(Compound))$Compound
+   subset(chem.physical_and_invitro.data,Compound%in%dup.chems)
+   
+   browser()
+ # Get rid of duplicates (shouldn't be any!)
+   chem.physical_and_invitro.data <- subset(chem.physical_and_invitro.data,
+     !duplicated(Compound))
+ }
There are instances of chemicals with same names but differing in other properties.
Called from: top level 
Browse[1]> 
> #
> # Create Matrix pearce2017regression:
> #
> pearce2017regression <- # regression parameter estimates from Pearce et al. (2017)
+   matrix(data = c(-0.167,0.543,-0.117,0.377,   # brain
+                   -0.325,0.574,-0.324,0.544,   # adipose
+                   -0.006,0.267,-0.022,0.196,   # red blood cells
+                   0.143, 0.764,0.14, 0.735,    # gut
+                   0.116, 0.683,0.12, 0.534,    # heart
+                   0.452, 0.673,0.443, 0.631,   # kidney
+                   0.475, 0.621,0.487, 0.513,   # liver
+                   0.087, 0.866,0.113, 0.75,    # lung
+                   -0.022, 0.658,-0.025, 0.537, # muscle
+                   -0.09, 0.566,-0.086, 0.498,  # skin
+                   0.034, 0.765,0.011, 0.675,   # spleen
+                   0.036, 0.781,0.025, 0.758),  # bone
+          nrow = 12, ncol = 4,byrow = T,
+          dimnames = list(c("brain","adipose","red blood cells",
+                            "gut","heart","kidney",
+                            "liver","lung","muscle",
+                            "skin","spleen","bone"),
+                          c("adj.fup.intercept","adj.fup.slope",
+                            "fup.intercept","fup.slope"))
+   )
> # Write to text so Git can track changes:
> write.table(pearce2017regression,file = "Pearce_2017_Regression.txt",quote = F,sep = "\t")
> 
> #
> # END pearce2017regression Creation
> #
> 
> #
> # WRITE OUT DATA
> #
> 
> write.table(chem.physical_and_invitro.data,file="HTTK-Chem-Props.txt",row.names=F,quote=F,sep="\t")
> write.table(chem.invivo.PK.data,file="HTTK-Chem-InVivo-Data.txt",row.names=F,quote=F,sep="\t")
> write.table(chem.invivo.PK.aggregate.data,file="HTTK-Chem-InVivo-Aggregate-Data.txt",row.names=F,quote=F,sep="\t")
> write.table(chem.invivo.PK.summary.data,file="HTTK-Chem-InVivo-Summary-Data.txt",row.names=F,quote=F,sep="\t")
> write.table(physiology.data,file="HTTK-Physiology-Data.txt",row.names=F,quote=F,sep="\t")
> write.table(tissue.data,file="HTTK-Tissue-Data.txt",row.names=F,quote=F,sep="\t")
> 
> Tables.Rdata.stamp <- paste("This Tables.RData file was created on",Sys.Date(),"by script version",SCRIPT.VERSION)
> #Write the tables.Rdata file:                                  
> save(chem.physical_and_invitro.data,
+      chem.invivo.PK.data,
+      chem.invivo.PK.aggregate.data,
+      chem.invivo.PK.summary.data,
+      dawson2021,
+      physiology.data,
+      pearce2017regression,
+      tissue.data,
+      Tables.Rdata.stamp,
+      EPA.ref,
+      file="Tables.RData",
+      compress="xz",
+      version=2)
> 
> cat("Move the Tables.RData to the httk/data directory.\n")
Move the Tables.RData to the httk/data directory.
> cat("Move the sysdata.rdaa to the httk/R directory.\n")
Move the sysdata.rdaa to the httk/R directory.
> 
> sysdata.rda.stamp <- paste("This sysdata.rdata file was created on",Sys.Date(),"by script version",SCRIPT.VERSION)
> 
> sipes2017 <- sipes2017[,c(
+                'CAS',
+                'Human.Funbound.plasma',
+                'Human.Clint')]
> 
> 
> #Now for the many parameters associated with the dynamic physiologic equations
> #for pregnancy from Kapraun et al. (2019):
>   kapraun2019 <- list(
+   BW_cubic_theta1 = -0.010614,
+   BW_cubic_theta2 = 0.029161,
+   BW_cubic_theta3 = -5.0203e-4,
+   Wadipose_linear_theta0 = 17.067,
+   Wadipose_linear_theta1 = 0.14937,
+   Wfkidney_gompertz_theta0 = 6.3327e-5,
+   Wfkidney_gompertz_theta1 = 1.0409,
+   Wfkidney_gompertz_theta2 = 0.076435,
+   Wfthyroid_gompertz_theta0 = 0.0038483,
+   Wfthyroid_gompertz_theta1 = 0.30799,
+   Wfthyroid_gompertz_theta2 = 0.039800,
+   Wfliver_gompertz_theta0 = 0.0074774,
+   Wfliver_gompertz_theta1 = 0.65856,
+   Wfliver_gompertz_theta2 = 0.061662,
+   Wfbrain_gompertz_theta0 = 0.01574,
+   Wfbrain_gompertz_theta1 = 0.70707,
+   Wfbrain_gompertz_theta2 = 0.064827,
+   Wfgut_gompertz_theta0 = 8.1828e-4,
+   Wfgut_gompertz_theta1 = 0.65028,
+   Wfgut_gompertz_theta2 = 0.047724,
+   Wflung_gompertz_theta0 = 3.0454e-4,
+   Wflung_gompertz_theta1 = 1.0667,
+   Wflung_gompertz_theta2 = 0.084604,
+   hematocrit_quadratic_theta0 = 39.192, 
+   hematocrit_quadratic_theta1 = -0.10562,
+   hematocrit_quadratic_theta2 = -7.1045e-4,
+   fhematocrit_cubic_theta1 = 4.5061,
+   fhematocrit_cubic_theta2 = -0.18487,
+   fhematocrit_cubic_theta3 = 0.0026766,
+   fBW_gompertz_theta0 = 0.0018282,
+   fBW_gompertz_theta1 = 1.1735,
+   fBW_gompertz_theta2 = 0.077577,
+   Vplacenta_cubic_theta1 = -1.7646,
+   Vplacenta_cubic_theta2 = 0.91775,
+   Vplacenta_cubic_theta3 = -0.011543,
+   Vamnf_logistic_theta0 = 822.34,
+   Vamnf_logistic_theta1 = 0.26988,
+   Vamnf_logistic_theta2 = 20.150,
+   Vplasma_mod_logistic_theta0 = 1.2406,
+   Vplasma_mod_logistic_theta1 = 0.31338,
+   Vplasma_mod_logistic_theta2 = 17.813,
+   Vplasma_mod_logistic_theta3 = 2.4958,
+   venous_blood_fraction = 0.595,
+   arterial_blood_fraction = 0.16,
+   fblood_weight_ratio = 80, #in ml/kg
+   Qcardiac_cubic_theta0 = 301.78,
+   Qcardiac_cubic_theta1 = 3.2512,
+   Qcardiac_cubic_theta2 = 0.15947,
+   Qcardiac_cubic_theta3 = -0.0047059,
+   term = 40.0, #weeks at delivery
+   Qgut_percent_initial = 17.0,
+   Qgut_percent_terminal = 12.5,
+   Qkidney_cubic_theta0 = 53.248,
+   Qkidney_cubic_theta1 = 3.6447,
+   Qkidney_cubic_theta2 = -0.15357,
+   Qkidney_cubic_theta3 = 0.0016968,
+   Qliver_percent_initial = 27.0,
+   Qliver_percent_terminal = 20.0,
+   Qthyroid_percent_initial = 1.5,
+   Qthyroid_percent_terminal = 1.1,
+   Qplacenta_linear_theta1 = 0.059176,
+   Qadipose_percent_initial = 8.5,
+   Qadipose_percent_terminal = 7.8,
+   Qgfr_quadratic_theta0 = 113.73,
+   Qgfr_quadratic_theta1 = 3.5784,
+   Qgfr_quadratic_theta2 = -0.067272,
+   Qfrvtl_logistic_theta0 = 2466.5,
+   Qfrvtl_logistic_theta1 = 0.14837,
+   Qfrvtl_logistic_theta2 = 43.108,
+   Qflvtl_logistic_theta0 = 506.30,
+   Qflvtl_logistic_theta1 = 0.21916,
+   Qflvtl_logistic_theta2 = 30.231,
+   Qfda_logistic_theta0 = 1125.3,
+   Qfda_logistic_theta1 = 0.18031,
+   Qfda_logistic_theta2 = 35.939,
+   Qfplacenta_logistic_theta0 = 262.20,
+   Qfplacenta_logistic_theta1 = 0.22183,
+   Qfplacenta_logistic_theta2 = 28.784,
+   Qfdv_gompertz_theta0 = 1.892,
+   Qfdv_gompertz_theta1 = 0.098249,
+   Qfdv_gompertz_theta2 = 0.0064374,
+   Qfnonplacental_percent = 75.0,
+   Qfgut_percent = 6.8,
+   Qfkidney_percent = 5.4,
+   Qfbrain_percent = 14.3,
+   Qbrain_percent = 12, #average of male/female ICRP 2002
+   Qkidney_percent = 18, #average of male/female ICRP 2002
+   Qgut_percent = 16, #average of male/female ICRP 2002
+   Qfliver_percent = 6.5,
+   Qfthyroid_percent = 1.5
+   )
>   
> save(Wetmore.data,
+      sipes2017,
+      chem.lists,
+      kapraun2019,
+      sysdata.rda.stamp,                 
+      file="sysdata.rda",
+      compress="xz",
+      version=2)
>      
> 
> 
>      
> ## Session Information ##
> Sys.time() # capture date and time of generating data
[1] "2021-04-29 09:17:39 EDT"
> sessionInfo() # capture package information for generating data
R version 4.0.3 (2020-10-10)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 18363)

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252 
[2] LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] magrittr_2.0.1 dplyr_1.0.4    readxl_1.3.1   stringr_1.4.0  xlsx_0.6.5    
[6] gdata_2.18.0   reshape_0.8.8 

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.6       tidyselect_1.1.0 R6_2.5.0         rlang_0.4.10    
 [5] fansi_0.4.2      plyr_1.8.6       tools_4.0.3      utf8_1.1.4      
 [9] ellipsis_0.3.1   gtools_3.8.2     tibble_3.1.0     lifecycle_1.0.0 
[13] crayon_1.4.1     rJava_0.9-13     purrr_0.3.4      vctrs_0.3.6     
[17] xlsxjars_0.6.1   glue_1.4.2       stringi_1.5.3    compiler_4.0.3  
[21] pillar_1.5.0     cellranger_1.1.0 generics_0.1.0   pkgconfig_2.0.3 
> 
> proc.time()
   user  system elapsed 
 289.18    2.78  385.06 

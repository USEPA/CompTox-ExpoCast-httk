out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a', plots = T)
library(httk)
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a',plots = T)
library(httk)
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a', plots = T)
out_fetal_pbtk
tissue.list
httk::tissue.data
debug(solve_model)
library(httk)
debug(parameterize_fetal_pbtk)
parameterize_fetal_pbtk(chem.name = 'bisphenol a')
parms
parms
library(httk)
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a')
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a', plots = T)
out_fetal_pbtk
parameterize_fetal_pbtk(chem.name = 'bisphenol a')
library(httk)
parameterize_fetal_pbtk(chem.name = "bisphenol a")
library(httk)
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a', plots = T)
library(httk)
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a', plots = T)
library(httk)
debug(solve_model)
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a')
state.vars
state
parameters
library(httk)
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a', plots = T)
out_fetal_pbtk
library(httk)
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a',plots = T)
out_fetal_pbtk
sum(1,2)
x = c(1,2,3)
y = c(1,4,5)
sum(x,y)
length(out_fetal_pbtk)
length(out_fetal_pbtk[,1])
out_fetal_pbtk[191,]
library(httk)
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a', plots = T)
library(httk)
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a', plots = T)
len = length(out_fetal_pbtk[,1])
len
out_fetal_pbtk
initial_mass = 2.676540e+02
first_amount_index = 25
out_fetal_pbtk[,25]
library(httk)
out_fetal_pbtk = solve_fetal_pbtk(chem.name = 'bisphenol a', plots = T)
out_fetal_pbtk
first_amount_index = 25 # ?
length(out_fetal_pbtk[1,])
len_columns = 45
initial_mass = 2.676540e+02
time_points = len(out_fetal_pbtk[,1])
time_points = length(out_fetal_pbtk[,1])
time_points
terminal_mass = 0 #initialize
out_fetal_pbtk[time_points,seq(first_amount_index,len_columns,1)]
sum(out_fetal_pbtk[time_points,seq(first_amount_index,len_columns,1)])
terminal_mass = sum(out_fetal_pbtk[time_points,seq(first_amount_index,len_columns,1)])
mass_diff = terminal_mass - initial_mass
mass_diff
initial_mass
help(calc_mc_oral_equiv)
library(httk)
library(httk)
help("calc_mc_oral_equiv")
calc_mc_oral_equiv(0.1,chem.cas="34256-82-1",which.quantile=c(0.05,0.5,0.95),
method='vi',samples=100,tissue='brain')
library(httk)
help("calc_mc_oral_equiv")
calc_mc_oral_equiv(0.1,chem.cas="34256-82-1",which.quantile=c(0.05,0.5,0.95),
method='vi',samples=100,tissue='brain')
library(httk)
parameterize_fetal_pbtk(chem.name = 'bisphenol a')
library(httk)
d = matrix(1:6,3,2)
d
dimnames(d) = list(c('ok','alright','yes'),c('well ok', 'well alright'))
d
d[,'well ok']
d[,c('well ok', 'well alright')]
library(httk)
out_pbtk = solve_pbtk(chem.name = 'bisphenol a', plots = T)
debug(solve_model)
debug(solve_pbtk(chem.name = 'bisphenol a', plots =T))
class(out_plot)
class(out_plot)
q
d
class(d) = deSolve
class(d) = 'deSolve'
class(d)
d = matrix(1:6,3,2)
class(d)
library(httk)
out_pbtk = solve_pbtk(chem.name = 'bisphenol a', plots = T)
out_pbtk
2100/66
debug(solve_model)
debug(solve_pbtk(chem.name = 'bisphenol a', plots = T))
out
out_pbtk
library(httk)
out_pbtk = solve_pbtk(chem.name = 'bisphenol a', plots = T)
help(unique)
library(httk)
out_pbtk = solve_pbtk(chem.name = 'bisphenol a', plots = T)
library(httk)
out_pbtk = solve_pbtk(chem.name = 'bisphenol a', plots = T)
help(as.numeric)
parameterize_inhalation(chem.name = 'bisphenol a')
library(httk)
parameterize_inhalation(chem.name = 'bisphenol a')
debug(parameterize_inhalation)
parameterize_inhalation(chem.name = 'bisphenol a')
parameterize_inhalation(chem.name = 'bisphenol a')
parameterize_inhalation(chem.name = 'bisphenol a')
chem.physical_and_invitro.data
class(chem.physical_and_invitro.data)
help(subset)
x = chem.physical_and_invitro.data
x['CAS']
x[1,'CAS']
x[2,'CAS']
x['CAS',]
x[1,]
names(x)
Tables.Rdata
load('Tables.RData')
load('C:/Users/msfeir/httk/data/Tables.RData')
y = load('C:/Users/msfeir/httk/data/Tables.RData')
names(y)
y = chem.physical_and_invitro.data
names(y)
subset(chem.physical_and_invitro.data,CAS = '1949-45-7','HL' )
chem.physical_and_invitro.data['1949-45-7']
chem.physical_and_invitro.data['1949-45-7',]
chem.physical_and_invitro.data['pyrene',]
chem.physical_and_invitro.data['Pyrene',]
get_cheminfo(chem.name = 'Pyrene')
chem.physical_and_invitro.data['129-00-0',]
subset(y,CAS = '129-00-0')
subset(y,'129-00-0',)
y['129-00-0',]
y['129-00-0','Rat.Fgutabs']
subset(y,'129-00-0','Rat.Fgutabs')
parameterize_inhalation(chem.name = 'pyrene')
x = c(1,4,3,2)
y = c(1,2,5,7)
x[x in y]
x[(x in y)]
help(in)
intersect(x,y)
length(intersect(x,y))
library(httk)
library(httk)
x = chem.physical_and_invitro.data
names(x)
y = c(1,2,4)
log(y)
exp(log(y))
log10(1)
log10(10)
z = log10(y)
10^z
library(httk)
gas_params = parameterize_gas_pbtk(chem.name = 'bisphenol a')
gas_params = parameterize_inhalation(chem.name = 'bisphenol a')
help(forcing)
library(deSolve)
help("forcing")
help(forcing)
help(forcings)
x = function(b,c,d){B = b*2}
x = function(b,c,d){B = b*2
}
x = function(b,c,d){
B = b*2
C = c*3
D = d*1.5}
x(1,2,3)
list(x(1,2,3))
help(cbind)
PPPP = list(x(1,2,3))
PPPP
x = function(b,c,d){
B = b*2
C = c*4
D = d + 3
cbind(B,C,D)}
list(x(1,2,3))
help(ode)
library(httk)
out = solve_gas_pbtk(chem.name = 'bisphenol a')
library(httk)
solve_gas_pbtk(chem.name = 'bisphenol a')
debug(solve_gas_pbtk)
solve_gas_pbtk(chem.name = 'bisphenol a')
bbbb = 'ok_ok'
tolower(bbbb)
library(httk)
solve_gas_pbtk(chem.name = 'bisphenol a')
out = solve_gas_pbtk(chem.name = 'bisphenol a')
library(httk)
out = solve_gas_pbtk(chem.name = 'bisphenol a')
library(httk)
out = solve_gas_pbtk(chem.name = 'bisphenol a')
out = solve_gas_pbtk(chem.name = 'bisphenol a', plots = T)
out = solve_gas_pbtk(chem.name = 'pyrene', plots = T)
library(httk)
out = solve_gas_pbtk(chem.name = 'pyrene', plots = T)
library(httk)
out = solve_gas_pbtk(chem.name = 'Abamectin',plots = T)
out = solve_gas_pbtk(chem.name = 'Bisphenol a',plots = T)
library(httk)
package_version(httk)
package_version('httk')
packageVersion(httk)
packageVersion('httk')
out = solve_gas_pbtk(chem.name = 'Alachlor')
debug(solve_gas_pbtk)
out = solve_gas_pbtk(chem.name = 'Alachlor')
get_chem_id(chem.name = 'bisphenol a')
get_chem_id(chem.name = 'bisphenol a')$chem.cas
out = solve_gas_pbtk(chem.name = 'bisphenol a')
out = solve_gas_pbtk(chem.name = 'bisphenol a')
q()
Q
out = solve_gas_pbtk(chem.name = 'bisphenol a')
undebug(solve_gas_pbtk)
out = solve_gas_pbtk(chem.name = 'bisphenol a')
library(httk)
out = solve_pbtk(chem.name = 'bisphenol a')
get_chem_id(chem.name = 'bisphenol a')
get_chem_id(chem.name = 'bisphenol-a')
get_physchem_param(chem.name = 'bisphenol a')
get_physchem_param(param = 'logHenry',chem.name = 'bisphenol a')
get_physchem_param(param = 'logHenry',chem.name = 'Bisphenol-a')
help(gsub)
get_chem_id(chem.name = 'bisphenola')
library(httk)
get_physchem_param(param = 'logHenry',chem.name = 'Bisphenol-a')
get_physchem_param(param = 'logHenry',chem.name = 'bispenol a')
get_physchem_param(param = 'logHenry',chem.name = 'bisphenol a')
get_chem_id(chem.name = 'bisphenola')
library(httk)
x= c('ok','yah','no')
x= c('ok','yah','no','hoooo','well')
x= c('ok','yah','no')
y= c('ok','yah','no','hoooo','well')
y[which(!y %in% x)]
z = parameterize_1comp(chem.name = 'bisphenol a')
y[(!y %in% x)]
y[!y %in% x]
library(httk)
params = parameterize_1comp(chem.name = 'bisphenol a')
params
out = solve_3comp(chem.cas = '80-05-7')
get_chem_id(chem.name = 'bisphenola')
out = solve_pbtk(chem.name = 'bisphenol a')
help(is.factor)
is.factor(3)
is.factor(c(1,4))
as.factor(c(1,3))
x = as.factor(c(1,3))
x
help(substring)
help(substr)
out = solve_gas_pbtk(chem.cas = '80-05-7')
debug(solve_gas_pbtk)
out = solve_gas_pbtk(chem.cas = '80-05-7')
get_chem_id(chem.name = 'bisphenol a')
out = solve_gas_pbtk(chem.cas = '80-05-7')
undebug(solve_gas_pbtk)
debug(solve_gas_pbtk)
out = solve_gas_pbtk(chem.cas = '80-05-7')
cas.number
Q()
q
q()
undebug(solve_gas_pbtk)
x = list(b = 'ok',c = 'yes')
x$b
y = x$b
y
library(httk)
debug(parameterize_gas_pbtk)
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
lumped_params
undebug(parameterize_gas_pbtk)
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
params = parameterize_gas_pbtk(chem.cas = '17804-35-2')
library(httk)
out = solve_gas_pbtk(chem.name = 'Benomyl')
out = solve_gas_pbtk(chem.cas = '17804-35-2')
library(httk)
out = parameterize_gas_pbtk(chem.name = 'Benomyl')
out = parameterize_gas_pbtk(chem.cas = '17804-35-2')
debug(calc_hepatic_clearance)
out = parameterize_gas_pbtk(chem.name = 'Benomyl')
chem.name
debug(parameterize_gas_pbtk)
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
lumped_params
this.phys.data
parameters
library(httk)
out = parameterize_gas_pbtk(chem.name = 'Benomyl')
out = solve_gas_pbtk(chem.name = 'Benomyl')
load("C:/Users/msfeir/httk/data/Tables.RData")
View(chem.physical_and_invitro.data)
debug(solve_gas_pbtk)
out = solve_gas_pbtk(chem.name = 'Benomyl')
debug(solve_model)
out = solve_gas_pbtk(chem.name = 'Benomyl')
debug(parameterize_gas_pbtk)
undebug(solve_gas_pbtk)
undebug(solve_model)
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
library(httk)
params = solve_gas_pbtk(chem.name = 'Benomyl')
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
library(httk)
params = parameterize_gas_pbtk(chem.name = "Benomyl")
debug(parameterize_gas_pbtk)
params = parameterize_gas_pbtk(chem.name = "Benomyl")
x = list(b = 'ok')
x$b
library(httk)
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
library(httk)
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
debug(calc_hep_clearance)
debug(parameterize_gas_pbtk)
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
Clint
x = 'ok,yeah,well'
y = strsplit(x,",")
y
y[1]
y[1][1]
y[[1]]
y[[1]][1]
y
class(y)
y[2]
y[1][1]
y[[1]
]
y[[1]]
library(httk)
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
library(httk)
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
debug(parameterize_gas_pbtk)
params = parameterize_1comp(chem.name = 'Benomyl')
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
chem.data = chem.physical_and_invitro.data
chem.cas = get_chem_id(chem.name = 'Benomyl')$chem.cas
chem.data['116-06-3',]
chem.data['116-06-3',"logHenry"]
library(httk)
params = parameterize_gas_pbtk(chem.name = "Benomyl")
params
out = solve_gas_pbtk(chem.name = 'Benomyl')
library(httk)
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
library(httk)
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
params
out = solve_gas_pbtk(chem.name = 'Benomyl')
library(httk)
out = solve_gas_pbtk()
out = solve_gas_pbtk(chem.name = 'Benomyl',plots = T)
warnings()
params = parameterize_gas_pbtk(chem.name = 'Benomyl')
out = solve_gas_pbtk(parameters = params)
out = solve_gas_pbtk(chem.name = 'Toluene')
library(httk)
out = solve_gas_pbtk(chem.name = 'vinyl chloride', plots = T)
out = solve_gas_pbtk(chem.name = 'Toluene', plots = T)
out = solve_gas_pbtk(chem.name = 'Bisphenol a', plots = T)
help(do.call)
b = list('ok')
c = list('yeah')
d = c(b,c)
class(d)
library(httk)
out = solve_gas_pbtk(chem.name = 'Toluene',plots = T)
library(httk)
out = solve_gas_pbtk(chem.name = 'Toluene',plots = T)
out = solve_gas_pbtk(chem.name = 'Toluene')
debug(solve_model)
debug(parameterize_gas_pbtk)
out = solve_gas_pbtk(chem.name = 'Toluene')
body_temp
Kwater2air
Kblood2air
this.phys.data
this.phys.data['Average Body Temperature']
class(this.phys.data)
typeof(this.phys.data)
this.phys.data["Hematocrit"]
as.numeric(this.phys.data['Average Body Temperature'])
library(httk)
out = solve_gas_pbtk(chem.name = 'Toluene', plots = T)
debug(solve_model)
debug(parameterize_gas_pbtk)
out = solve_gas_pbtk(chem.name = 'Toluene')
parameterize.arg.list
vmax.km
vmax.km
vmax.km
outlist
body_temp
help(do.call)
zz = list(ok = 'ok')
ok
debug(parameterize_gas_pbtk)
params = parameterize_gas_pbtk(chem.name = 'Toluene')
b = F
if (b) print('ok')
if(!b) print('ok')
params = parameterize_gas_pbtk(chem.name = 'Toluene',vmax.km = T)
vmax.km
params = parameterize_gas_pbtk(chem.name = 'Toluene',vmax.km = F)
vmax.km
params = parameterize_gas_pbtk(chem.name = 'Toluene')
vmax.km
vmax.km == F
vmax.km
vmax.km == F
outlist
ifelse(vma])
ifelse(vmax.km,5,10)
library(httk)
debug(parameterize_gas_pbtk)
params = parameterize_gas_pbtk(chem.name = 'Toluene')
vmax.km
params = parameterize_gas_pbtk(chem.name = 'Toluene')
vmax.km
warnings()
library(httk)
params = parameterize_gas_pbtk(chem.name = 'Toluene')
library(httk)
fake <- data.frame(Compound="Tester",
+                    CASRN="222-11-1",
+                    MW=200,
+                    logP=3.5,
+                    Fup=0.1,
+                    Clint=0.1,
+                    Clint.pValue=0.001) chem.physical_and_invitro.data <- add_chemtable(fake,current.table=chem.physical_and_invitro.data,data.list=list(Compound="Compound",CAS="CASRN",MW="MW",logP="logP",Funbound.plasma="Fup",Clint="Clint",Clint.pValue="Clint.pValue"),species="Human",reference="Fake")
fake <- data.frame(Compound="Tester",
CASRN="222-11-1",
MW=200,
logP=3.5,
Fup=0.1,
Clint=0.1,
Clint.pValue=0.001)
chem.physical_and_invitro.data <- add_chemtable(fake,current.table=chem.physical_and_invitro.data,data.list=list(Compound="Compound",CAS="CASRN",MW="MW",logP="logP",Funbound.plasma="Fup",Clint="Clint",Clint.pValue="Clint.pValue"),species="Human",reference="Fake")
calc_css(chem.name="Tester")
debug(calc_css)
calc_css(chem.name="Tester")
calc_css(chem.name="Tester")
debug(parameterize_pbtk)
calc_css(chem.name="Tester")
Clint.db
class(Clint.db)
try(get_invitroPK_param("Clint", "Human",
chem.cas = chem.cas), silent = T)
get_invitroPK_param("Clint", "Human",
chem.cas = chem.cas)
debug(get_invitroPK_param)
debug(get_invitroPK_param())
debug(httk:::get_invitroPK_param)
calc_css(chem.name="Tester")
this.col.index
chem.physical_and_invitro.data.index
param.val
dtxsid
chem.cas
chem.name
help(which)
x = list(b= 'ok',c = 'yeah')
x[1]
which(x == 'ok')
d = which(x == 'ok')
d
x[d]
x[[]]
x[]
x[]
x[1]
x[[1]]
View(chem.physical_and_invitro.data)
debug(add_chemtable)
debug(httk:::add_chemtable)
setwd('C:/Users/msfeir/httk/tests')
source('adddata_test.R')
source('adddata_test.R')
debug(httk:::augment.table)
source('adddata_test.R')

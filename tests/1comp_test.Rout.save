
R version 3.6.2 (2019-12-12) -- "Dark and Stormy Night"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #R CMD BATCH --no-timing --no-restore --no-save 1comp_test.R 1comp_test.Rout
> library(httk)
> options(warn=-1)
> 
> calc_analytic_css(chem.name="bisphenol a",model="1compartment")
Human volume of distribution returned in units of L/kg BW.
Plasma concentration returned in uM units.
[1] 1.484
> calc_analytic_css(chem.cas="80-05-7",model="1compartment")
Human volume of distribution returned in units of L/kg BW.
Plasma concentration returned in uM units.
[1] 1.484
> calc_analytic_css(parameters=parameterize_1comp(chem.cas="80-05-7"),model="1compartment")
Human volume of distribution returned in units of L/kg BW.
Plasma concentration returned in uM units.
[1] 1.484
> calc_analytic_css(chem.cas="80-05-7",model="1compartment",tissue="liver")
Human volume of distribution returned in units of L/kg BW.
Tissue concentration for liver returned in uM units.
[1] 26.93
> calc_analytic_css(chem.cas="80-05-7",model="1compartment",tissue="brain")
Human volume of distribution returned in units of L/kg BW.
Tissue concentration for brain returned in uM units.
[1] 8.555
> 
> head(solve_1comp(chem.name="bisphenol a"))
Human volume of distribution returned in units of L/kg BW.
Human amounts returned in umol and concentration returned in uM units.
AUC is area under plasma concentration in uM * days units with 
Rblood2plasma = 0.79.
          time Agutlumen Ccompartment Ametabolized         AUC
[1,] 0.0000000  273.2000  0.000000000  0.00000e+00 0.00000e+00
[2,] 0.0000100  273.0580  0.000407485  3.75093e-07 2.03761e-09
[3,] 0.0104167  158.4130  0.326346000  3.41543e-01 1.85535e-03
[4,] 0.0208333   91.8545  0.513795000  1.16366e+00 6.32131e-03
[5,] 0.0312500   53.2611  0.620716000  2.26103e+00 1.22825e-02
[6,] 0.0416667   30.8830  0.680953000  3.51463e+00 1.90924e-02
> head(solve_1comp(chem.cas="80-05-7"))
Human volume of distribution returned in units of L/kg BW.
Human amounts returned in umol and concentration returned in uM units.
AUC is area under plasma concentration in uM * days units with 
Rblood2plasma = 0.79.
          time Agutlumen Ccompartment Ametabolized         AUC
[1,] 0.0000000  273.2000  0.000000000  0.00000e+00 0.00000e+00
[2,] 0.0000100  273.0580  0.000407485  3.75093e-07 2.03761e-09
[3,] 0.0104167  158.4130  0.326346000  3.41543e-01 1.85535e-03
[4,] 0.0208333   91.8545  0.513795000  1.16366e+00 6.32131e-03
[5,] 0.0312500   53.2611  0.620716000  2.26103e+00 1.22825e-02
[6,] 0.0416667   30.8830  0.680953000  3.51463e+00 1.90924e-02
> head(solve_1comp(parameters=parameterize_1comp(chem.cas="80-05-7")))
Human volume of distribution returned in units of L/kg BW.
Amounts returned in umol  and concentration returned in uM units.
AUC is area under plasma concentration in uM * days units with 
Rblood2plasma = 0.79.
          time Agutlumen Ccompartment Ametabolized         AUC
[1,] 0.0000000  273.2000  0.000000000  0.00000e+00 0.00000e+00
[2,] 0.0000100  273.0580  0.000407485  3.75093e-07 2.03761e-09
[3,] 0.0104167  158.4130  0.326346000  3.41543e-01 1.85535e-03
[4,] 0.0208333   91.8545  0.513795000  1.16366e+00 6.32131e-03
[5,] 0.0312500   53.2611  0.620716000  2.26103e+00 1.22825e-02
[6,] 0.0416667   30.8830  0.680953000  3.51463e+00 1.90924e-02
> 
> calc_vdist(chem.name="triclosan")
Human volume of distribution returned in units of L/kg BW.
[1] 2.301479
> calc_vdist(chem.cas="80-05-7")
Human volume of distribution returned in units of L/kg BW.
[1] 5.009845
> params <- parameterize_schmitt(chem.name="triclosan")
> params <- c(params, predict_partitioning_schmitt(parameters = params))
> calc_vdist(parameters=params)
Volume of distribution returned in units of L/kg BW.
[1] 2.301479
> params <- parameterize_3comp(chem.name="triclosan")
> calc_vdist(parameters=params)
Volume of distribution returned in units of L/kg BW.
[1] 2.301479
> params <- parameterize_pbtk(chem.name="triclosan")
> calc_vdist(parameters=params)
Volume of distribution returned in units of L/kg BW.
[1] 2.301479
> 
> script.args <- commandArgs(TRUE)
> if (length(script.args) > 0) 
+ {
+   if (any(script.args=="mctest"))
+   {
+     set.seed(12345)
+     calc_mc_css(chem.name="bisphenol a",model="1compartment")
+     set.seed(12345)
+     calc_mc_css(chem.cas="80-05-7",model="1compartment")
+     set.seed(12345)
+     calc_mc_css(parameters=parameterize_1comp(chem.cas="80-05-7"),model="1compartment")
+   }
+   if (any(script.args=="wetmoretest"))
+   {
+     wetmore.chems <- subset(chem.physical_and_invitro.data,
+       regexpr("Wetmore",Human.Clint.Reference)!=-1 &
+       regexpr("Wetmore",Human.Funbound.plasma.Reference)!=-1)
+     Css.table <- data.frame()
+     for (this.cas in sort(get_lit_cheminfo()))
+       if (this.cas %in% get_cheminfo(model="pbtk") &
+         this.cas %in% wetmore.chems$CAS)
+       {
+         Css.table[this.cas,"Css.lit"] <- get_lit_css(chem.cas=this.cas,
+           output.units="uM",
+           which.quantile=0.5)
+         Css.table[this.cas,"Css.calc"] <- calc_analytic_css(chem.cas=this.cas,
+           model="1compartment")
+       }                                                                          
+     cat(lm(log(Css.lit)~log(Css.calc),data=Css.table)$coefficients)
+    
+     #library(ggplot2)
+     #test.fig <- ggplot(Css.table,aes(x=Css.calc,y=Css.lit)) +
+     #         geom_point(size=3)+
+     #   scale_y_log10()+
+     #   scale_x_log10()+
+     #  ylab(expression(paste(C[aa]," Literature (uM)"))) +
+     #  xlab(expression(paste(C[aa]," 1compartment model (uM)"))) +
+     #  geom_abline(intercept = 0, slope = 1,linetype="dashed", colour="Blue") 
+     #
+     #dev.new()
+     #print(test.fig)
+   }
+ }
> 
> quit("no")

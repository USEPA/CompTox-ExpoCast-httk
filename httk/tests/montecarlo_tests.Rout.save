
R Under development (unstable) (2021-04-27 r80234) -- "Unsuffered Consequences"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #R CMD BATCH --no-timing --no-restore --no-save montecarlo_tests.R montecarlo_tests.Rout
> library(httk)
> 
> NSAMP <- 2
> 
> 
> 
> #
> #
> # Test that the underlying PK models give the same answers:
> calc_analytic_css(chem.cas="15972-60-8")
Plasma concentration returned in uM units.
[1] 0.2364
Warning messages:
1: In predict_partitioning_schmitt(parameters = schmitt.params, species = species,  :
  Membrane affintity (MA) predicted with method of Yun and Edginton (2013)
2: In parameterize_pbtk(default.to.human = FALSE, adjusted.Funbound.plasma = TRUE,  :
  Funbound.plasma adjusted for in vitro partioning (Pearce, 2017).
3: In available_rblood2plasma(chem.cas = chem.cas, species = species,  :
  Human in vivo measured Rblood2plasma used.
> calc_analytic_css(chem.cas="15972-60-8",model="1compartment")
Human volume of distribution returned in units of L/kg BW.
Plasma concentration returned in uM units.
[1] 0.2781
Warning message:
In available_rblood2plasma(chem.cas = chem.cas, chem.name = chem.name,  :
  Human in vivo measured Rblood2plasma used.
> calc_analytic_css(chem.cas="15972-60-8",model="pbtk")
Plasma concentration returned in uM units.
[1] 0.2364
Warning messages:
1: In predict_partitioning_schmitt(parameters = schmitt.params, species = species,  :
  Membrane affintity (MA) predicted with method of Yun and Edginton (2013)
2: In parameterize_pbtk(default.to.human = FALSE, adjusted.Funbound.plasma = TRUE,  :
  Funbound.plasma adjusted for in vitro partioning (Pearce, 2017).
3: In available_rblood2plasma(chem.cas = chem.cas, species = species,  :
  Human in vivo measured Rblood2plasma used.
> calc_analytic_css(chem.cas="15972-60-8",model="3compartment")
Plasma concentration returned in uM units.
[1] 0.279
Warning messages:
1: In predict_partitioning_schmitt(parameters = schmitt.params, species = species,  :
  Membrane affintity (MA) predicted with method of Yun and Edginton (2013)
2: In parameterize_pbtk(chem.cas = chem.cas, chem.name = chem.name,  :
  Funbound.plasma adjusted for in vitro partioning (Pearce, 2017).
3: In available_rblood2plasma(chem.cas = chem.cas, species = species,  :
  Human in vivo measured Rblood2plasma used.
> 
> 
> 
> #
> #
> # Now test Monte Carlo for a variety of chemicals:
> # Clint and Fup are distributions, clint is zero:
> set.seed(1234)
> calc_mc_css(chem.cas="50594-66-6",samples=NSAMP)
Human plasma concentration returned in mg/L units for 0.95 quantile.
  95% 
66.33 
Warning messages:
1: In (function (chem.cas = NULL, chem.name = NULL, dtxsid = NULL,  :
  Clint is provided as a distribution.
2: In (function (chem.cas = NULL, chem.name = NULL, dtxsid = NULL,  :
  Fraction unbound is provided as a distribution.
3: In (function (chem.cas = NULL, chem.name = NULL, dtxsid = NULL,  :
  Funbound.plasma adjusted for in vitro partitioning (Pearce, 2017).
4: In calc_rblood2plasma(hematocrit = parameters.dt$hematocrit, Krbc2pu = parameters.dt$Krbc2pu,  :
  Rblood2plasma has been recalculated.
5: In any(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
6: In all(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
> # Human.Clint.pvalue > 0.05, no measured Rblood2plasma
> set.seed(1234)
> calc_mc_css(chem.cas="116-06-3",samples=NSAMP)
Human plasma concentration returned in mg/L units for 0.95 quantile.
  95% 
1.199 
Warning messages:
1: In (function (chem.cas = NULL, chem.name = NULL, dtxsid = NULL,  :
  Funbound.plasma adjusted for in vitro partitioning (Pearce, 2017).
2: In calc_rblood2plasma(chem.cas = chem.cas, species = species, adjusted.Funbound.plasma = adjusted.Funbound.plasma,  :
  Rblood2plasma has been recalculated.
3: In calc_rblood2plasma(hematocrit = parameters.dt$hematocrit, Krbc2pu = parameters.dt$Krbc2pu,  :
  Rblood2plasma has been recalculated.
4: In any(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
5: In all(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
> # Human.Funbound.plasma is below LOD (0.005), can't do PBPK, can't predict
> # Rblood2plasma
> set.seed(1234)
> calc_mc_css(chem.cas="101-05-3",samples=NSAMP)
Human plasma concentration returned in mg/L units for 0.95 quantile.
  95% 
3.429 
Warning messages:
1: In (function (chem.cas = NULL, chem.name = NULL, dtxsid = NULL,  :
  Fraction unbound = 0, changed to 0.005.
2: In (function (chem.cas = NULL, chem.name = NULL, dtxsid = NULL,  :
  Funbound.plasma adjusted for in vitro partitioning (Pearce, 2017).
3: In calc_rblood2plasma(hematocrit = parameters.dt$hematocrit, Krbc2pu = parameters.dt$Krbc2pu,  :
  Rblood2plasma has been recalculated.
4: In any(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
5: In all(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
> # well-behaved chemical with a measured Rblood2plasma:
> set.seed(1234)
> calc_mc_css(chem.cas="15972-60-8",samples=NSAMP)
Human plasma concentration returned in mg/L units for 0.95 quantile.
  95% 
0.242 
Warning messages:
1: In (function (chem.cas = NULL, chem.name = NULL, dtxsid = NULL,  :
  Funbound.plasma adjusted for in vitro partitioning (Pearce, 2017).
2: In calc_rblood2plasma(hematocrit = parameters.dt$hematocrit, Krbc2pu = parameters.dt$Krbc2pu,  :
  Rblood2plasma has been recalculated.
3: In any(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
4: In all(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
> 
> 
> 
> #
> #
> # Now test that MC works across different models:
> #set.seed(1234)
> #calc_mc_css(chem.cas="15972-60-8",model="3compartment",samples=NSAMP)
> #set.seed(1234)
> #calc_mc_css(chem.cas="15972-60-8",model="1compartment",samples=NSAMP)
> #set.seed(1234)
> #calc_mc_css(chem.cas="15972-60-8",model="pbtk",samples=NSAMP)
> 
> #
> #
> # Now do different MC sampling:
> #set.seed(1234)
> # Standard HTTK Monte Carlo:
> #calc_mc_css(chem.cas="90-43-7",model="pbtk",samples=NSAMP)
> #set.seed(1234)
> # HTTK Monte Carlo with no measurment uncertainty (pre v1.10.0):
> #calc_mc_css(chem.cas="90-43-7",
> #  model="pbtk",
> #  samples=NSAMP,
> #  invitro.mc.arg.list = list(adjusted.Funbound.plasma = T,
> #    poormetab = T, 
> #    fup.censored.dist = FALSE, 
> #    fup.lod = 0.01, 
> #    fup.meas.cv = 0.0, 
> #    clint.meas.cv = 0.0, 
> #    fup.pop.cv = 0.3, 
> #    clint.pop.cv = 0.3))
> #set.seed(1234)
> # HTTK Monte Carlo with no HTTK-Pop physiological variability):
> #calc_mc_css(chem.cas="90-43-7",model="pbtk",samples=NSAMP,httkpop=FALSE)
> #set.seed(1234)
> # HTTK Monte Carlo with no in vitro uncertainty and variability):
> #calc_mc_css(chem.cas="90-43-7",model="pbtk",samples=NSAMP,invitrouv=FALSE)
> #set.seed(1234)
> # HTTK Monte Carlo with no HTTK-Pop and no in vitro uncertainty and variability):
> #calc_mc_css(chem.cas="90-43-7",model="pbtk",samples=NSAMP,httkpop=FALSE,invitrouv=FALSE)
> # Should be the same as the mean result:
> #calc_analytic_css(chem.cas="90-43-7",model="pbtk",output.units="mg/L")
> #set.seed(1234)
> # HTTK Monte Carlo using basic Monte Carlo sampler:
> #calc_mc_css(chem.cas="90-43-7",
> #  model="pbtk",
> #  samples=NSAMP,
> #  httkpop=FALSE,
> #  invitrouv=FALSE,
> #  vary.params=list(Pow=0.3))
> 
> 
> #set.seed(1234)    
> # well-behaved chemical with a measured Rblood2plasma:
> # lapply(calc_mc_tk(chem.cas="80-05-7",samples=NSAMP),function(x) x[-2,])
> 
> set.seed(1234)    
> # make sure the oral equivalent function works:
> calc_mc_oral_equiv(chem.name="bisphenol a",conc=10,samples=NSAMP)
uM concentration converted to mgpkgpday dose for 0.95 quantile.
  95% 
4.429 
Warning messages:
1: In (function (chem.cas = NULL, chem.name = NULL, dtxsid = NULL,  :
  Clint is provided as a distribution.
2: In (function (chem.cas = NULL, chem.name = NULL, dtxsid = NULL,  :
  Fraction unbound is provided as a distribution.
3: In (function (chem.cas = NULL, chem.name = NULL, dtxsid = NULL,  :
  Funbound.plasma adjusted for in vitro partitioning (Pearce, 2017).
4: In calc_rblood2plasma(hematocrit = parameters.dt$hematocrit, Krbc2pu = parameters.dt$Krbc2pu,  :
  Rblood2plasma has been recalculated.
5: In any(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
6: In all(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
> 
> quit("no")


R Under development (unstable) (2021-04-27 r80234) -- "Unsuffered Consequences"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #R CMD BATCH --no-timing --no-restore --no-save 3compss_test.R 3compss_test.Rout
> library(httk)
> 
> calc_analytic_css(chem.name="bisphenol a",model="3compartmentss")
Plasma concentration returned in uM units.
[1] 1.463
Warning messages:
1: In parameterize_steadystate(default.to.human = FALSE, adjusted.Funbound.plasma = TRUE,  :
  Clint is provided as a distribution.
2: In parameterize_steadystate(default.to.human = FALSE, adjusted.Funbound.plasma = TRUE,  :
  Fraction unbound is provided as a distribution.
3: In parameterize_steadystate(default.to.human = FALSE, adjusted.Funbound.plasma = TRUE,  :
  Funbound.plasma adjusted for in vitro partitioning (Pearce, 2017).
4: In any(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
5: In all(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
> calc_analytic_css(chem.cas="80-05-7",model="3compartmentss")
Plasma concentration returned in uM units.
[1] 1.463
Warning messages:
1: In parameterize_steadystate(default.to.human = FALSE, adjusted.Funbound.plasma = TRUE,  :
  Clint is provided as a distribution.
2: In parameterize_steadystate(default.to.human = FALSE, adjusted.Funbound.plasma = TRUE,  :
  Fraction unbound is provided as a distribution.
3: In parameterize_steadystate(default.to.human = FALSE, adjusted.Funbound.plasma = TRUE,  :
  Funbound.plasma adjusted for in vitro partitioning (Pearce, 2017).
4: In any(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
5: In all(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
> calc_analytic_css(parameters=parameterize_steadystate(chem.cas="80-05-7"),model="3compartmentss")
Plasma concentration returned in uM units.
[1] 1.463
Warning messages:
1: In parameterize_steadystate(chem.cas = "80-05-7") :
  Clint is provided as a distribution.
2: In parameterize_steadystate(chem.cas = "80-05-7") :
  Fraction unbound is provided as a distribution.
3: In parameterize_steadystate(chem.cas = "80-05-7") :
  Funbound.plasma adjusted for in vitro partitioning (Pearce, 2017).
4: In any(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
5: In all(lapply(chem_id_list, is.null)) :
  coercing argument of type 'list' to logical
> 
> script.args <- commandArgs(TRUE)
> if (length(script.args) > 0) 
+ {
+   if (any(script.args=="mctest"))
+   {
+     set.seed(12345)
+     calc_mc_css(chem.name="bisphenol a",model="3compartmentss")
+     set.seed(12345)
+     calc_mc_css(chem.cas="80-05-7",model="3compartmentss")
+     set.seed(12345)
+     calc_mc_css(parameters=parameterize_steadystate(chem.cas="80-05-7"),model="3compartmentss")
+   }
+   if (any(script.args=="wetmoretest"))
+   {  
+     wetmore.chems <- subset(chem.physical_and_invitro.data,
+       regexpr("Wetmore",Human.Clint.Reference)!=-1 &
+       regexpr("Wetmore",Human.Funbound.plasma.Reference)!=-1)
+     Css.table <- data.frame()
+     for (this.cas in sort(get_lit_cheminfo()))
+       if (this.cas %in% get_cheminfo(model="3compartmentss") &
+         this.cas %in% wetmore.chems$CAS)
+       {
+         Css.table[this.cas,"Css.lit"] <- get_lit_css(chem.cas=this.cas,
+           output.units="uM",
+           which.quantile=0.5)
+         Css.table[this.cas,"Css.calc"] <- calc_analytic_css(chem.cas=this.cas,
+           model="3compartmentss")
+       }                                                                          
+     cat(lm(log(Css.lit)~log(Css.calc),data=Css.table)$coefficients)
+      
+ #    library(ggplot2)
+ #    test.fig <- ggplot(Css.table,aes(x=Css.calc,y=Css.lit)) +
+ #             geom_point(size=3)+
+ #       scale_y_log10()+
+ #       scale_x_log10()+
+ #      ylab(expression(paste(C[aa]," Literature (uM))"))) +
+ #      xlab(expression(paste(C[aa]," 3compartmentss model (uM)"))) +
+ #      geom_abline(intercept = 0, slope = 1,linetype="dashed", colour="Blue") 
+ #    
+ #    dev.new()
+ #    print(test.fig)
+   }
+ }
> 
> quit("no")

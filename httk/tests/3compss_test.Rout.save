
R Under development (unstable) (2023-04-16 r84269 ucrt) -- "Unsuffered Consequences"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # R CMD BATCH --no-timing --no-restore --no-save 3compss_test.R 3compss_test.Rout
> 
> # Get rid of anything in the workspace:
> rm(list=ls()) 
> 
> library(httk)
> 
> calc_analytic_css(chem.name="bisphenol a",model="3compartmentss")
Plasma concentration returned in uM units.
[1] 1.584
Warning messages:
1: In get_clint(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Clint is provided as a distribution.
2: In apply_clint_adjustment(Clint.point, Fu_hep = Fu_hep, suppress.messages = suppress.messages) :
  Clint adjusted for in vitro partitioning (Kilford, 2008), see calc_hep_fu.
3: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
4: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
5: In (function (Params = NULL, chem.cas = NULL, chem.name = NULL,  :
  Default value of 1.6 used for Caco2 permeability.
> calc_analytic_css(chem.cas="80-05-7",model="3compartmentss")
Plasma concentration returned in uM units.
[1] 1.584
Warning messages:
1: In get_clint(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Clint is provided as a distribution.
2: In apply_clint_adjustment(Clint.point, Fu_hep = Fu_hep, suppress.messages = suppress.messages) :
  Clint adjusted for in vitro partitioning (Kilford, 2008), see calc_hep_fu.
3: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
4: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
5: In (function (Params = NULL, chem.cas = NULL, chem.name = NULL,  :
  Default value of 1.6 used for Caco2 permeability.
> calc_analytic_css(parameters=parameterize_steadystate(chem.cas="80-05-7"),model="3compartmentss")
Plasma concentration returned in uM units.
[1] 1.584
Warning messages:
1: In get_clint(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Clint is provided as a distribution.
2: In apply_clint_adjustment(Clint.point, Fu_hep = Fu_hep, suppress.messages = suppress.messages) :
  Clint adjusted for in vitro partitioning (Kilford, 2008), see calc_hep_fu.
3: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
4: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
5: In (function (Params = NULL, chem.cas = NULL, chem.name = NULL,  :
  Default value of 1.6 used for Caco2 permeability.
> 
> script.args <- commandArgs(TRUE)
> if (length(script.args) > 0) 
+ {
+   if (any(script.args=="mctest"))
+   {
+     set.seed(12345)
+     calc_mc_css(chem.name="bisphenol a",model="3compartmentss")
+     set.seed(12345)
+     calc_mc_css(chem.cas="80-05-7",model="3compartmentss")
+     set.seed(12345)
+     calc_mc_css(parameters=parameterize_steadystate(chem.cas="80-05-7"),model="3compartmentss")
+   }
+   if (any(script.args=="wetmoretest"))
+   {  
+     wetmore.chems <- subset(chem.physical_and_invitro.data,
+       regexpr("Wetmore",Human.Clint.Reference)!=-1 &
+       regexpr("Wetmore",Human.Funbound.plasma.Reference)!=-1)
+     Css.table <- data.frame()
+     for (this.cas in sort(get_lit_cheminfo()))
+       if (this.cas %in% get_cheminfo(model="3compartmentss") &
+         this.cas %in% wetmore.chems$CAS)
+       {
+         Css.table[this.cas,"Css.lit"] <- get_lit_css(chem.cas=this.cas,
+           output.units="uM",
+           which.quantile=0.5)
+         Css.table[this.cas,"Css.calc"] <- calc_analytic_css(chem.cas=this.cas,
+           model="3compartmentss")
+       }                                                                          
+     cat(lm(log(Css.lit)~log(Css.calc),data=Css.table)$coefficients)
+      
+ #    library(ggplot2)
+ #    test.fig <- ggplot(Css.table,aes(x=Css.calc,y=Css.lit)) +
+ #             geom_point(size=3)+
+ #       scale_y_log10()+
+ #       scale_x_log10()+
+ #      ylab(expression(paste(C[aa]," Literature (uM))"))) +
+ #      xlab(expression(paste(C[aa]," 3compartmentss model (uM)"))) +
+ #      geom_abline(intercept = 0, slope = 1,linetype="dashed", colour="Blue") 
+ #    
+ #    dev.new()
+ #    print(test.fig)
+   }
+ }
> 
> quit("no")

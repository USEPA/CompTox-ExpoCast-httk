
R Under development (unstable) (2023-04-16 r84269 ucrt) -- "Unsuffered Consequences"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #R CMD BATCH --no-timing --no-restore --no-save 1comp_test.R 1comp_test.Rout
> library(httk)
> 
> #calc_analytic_css(chem.name="bisphenol a",model="1compartment")
> calc_analytic_css(chem.cas="80-05-7",model="1compartment")
Human volume of distribution returned in units of L/kg BW.
Plasma concentration returned in uM units.
[1] 1.584
Warning messages:
1: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
2: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
3: In available_rblood2plasma(chem.cas = chem.cas, chem.name = chem.name,  :
  Human in vivo measured Rblood2plasma used.
> calc_analytic_css(chem.cas="80-05-7",parameters=parameterize_1comp(chem.cas="80-05-7"),model="1compartment")
Human volume of distribution returned in units of L/kg BW.
Plasma concentration returned in uM units.
[1] 1.584
Warning messages:
1: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
2: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
3: In available_rblood2plasma(chem.cas = chem.cas, chem.name = chem.name,  :
  Human in vivo measured Rblood2plasma used.
> #calc_analytic_css(chem.cas="80-05-7",model="1compartment",tissue="liver")
> calc_analytic_css(chem.cas="80-05-7",model="1compartment",tissue="brain")
Human volume of distribution returned in units of L/kg BW.
Plasma concentration for brain returned in uM units.
[1] 9.243
Warning messages:
1: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
2: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
3: In available_rblood2plasma(chem.cas = chem.cas, chem.name = chem.name,  :
  Human in vivo measured Rblood2plasma used.
> 
> ##head(solve_1comp(chem.name="bisphenol a"))
> #head(solve_1comp(chem.cas="80-05-7"))
> head(solve_1comp(parameters=parameterize_1comp(chem.cas="80-05-7")))
Human volume of distribution returned in units of L/kg BW.
None of the monitored components undergo unit conversions  (i.e. conversion factor of 1).

AUC is area under the plasma concentration curve in uM*days units with Rblood2plasma = 0.795.
The model outputs are provided in the following units:
	umol: Agutlumen, Ametabolized
	uM: Ccompartment
	uM*days: AUC

           time Agutlumen Ccompartment Ametabolized       AUC
[1,] 0.00000000    234.90      0.00000     0.000000 0.000e+00
[2,] 0.00100000    222.90      0.02699     0.002541 1.361e-05
[3,] 0.01041667    136.20      0.22200     0.235500 1.262e-03
[4,] 0.02083333     78.98      0.34970     0.802600 4.300e-03
[5,] 0.03125000     45.80      0.42280     1.560000 8.360e-03
[6,] 0.04166667     26.56      0.46420     2.426000 1.300e-02
Warning messages:
1: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
2: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
3: In available_rblood2plasma(chem.cas = chem.cas, chem.name = chem.name,  :
  Human in vivo measured Rblood2plasma used.
4: In solve_model(chem.name = chem.name, chem.cas = chem.cas, dtxsid = dtxsid,  :
  Rblood2plasma not recalculated. 
Set recalc.blood2plasma to TRUE if desired.
5: In solve_model(chem.name = chem.name, chem.cas = chem.cas, dtxsid = dtxsid,  :
  Clearance not recalculated. 
Set recalc.clearance to TRUE if desired.
> 
> calc_vdist(chem.name="triclosan")
Human volume of distribution returned in units of L/kg BW.
[1] 2.325
Warning messages:
1: In calc_ma(chem.cas = chem.cas, chem.name = chem.name, dtxsid = dtxsid,  :
  Membrane affintity (MA) predicted with method of Yun and Edginton (2013), see calc_ma.
2: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
3: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
> calc_vdist(chem.cas="80-05-7")
Human volume of distribution returned in units of L/kg BW.
[1] 6.337
Warning messages:
1: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
2: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
> params <- parameterize_schmitt(chem.name="triclosan")
Warning messages:
1: In calc_ma(chem.cas = chem.cas, chem.name = chem.name, dtxsid = dtxsid,  :
  Membrane affintity (MA) predicted with method of Yun and Edginton (2013), see calc_ma.
2: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
3: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
> params <- c(params, predict_partitioning_schmitt(parameters = params))
> calc_vdist(parameters=params)
Volume of distribution returned in units of L/kg BW.
[1] 2.325
> params <- parameterize_3comp(chem.name="triclosan")
Warning messages:
1: In get_clint(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Clint is provided as a distribution.
2: In apply_clint_adjustment(Clint.point, Fu_hep = Fu_hep, suppress.messages = suppress.messages) :
  Clint adjusted for in vitro partitioning (Kilford, 2008), see calc_hep_fu.
3: In calc_ma(chem.cas = chem.cas, chem.name = chem.name, dtxsid = dtxsid,  :
  Membrane affintity (MA) predicted with method of Yun and Edginton (2013), see calc_ma.
4: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
5: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
6: In available_rblood2plasma(chem.cas = chem.cas, species = species,  :
  Human in vivo measured Rblood2plasma used.
7: In (function (Params = NULL, chem.cas = NULL, chem.name = NULL,  :
  Default value of 1.6 used for Caco2 permeability.
> calc_vdist(parameters=params)
Volume of distribution returned in units of L/kg BW.
[1] 2.324
> params <- parameterize_pbtk(chem.name="triclosan")
Warning messages:
1: In get_clint(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Clint is provided as a distribution.
2: In apply_clint_adjustment(Clint.point, Fu_hep = Fu_hep, suppress.messages = suppress.messages) :
  Clint adjusted for in vitro partitioning (Kilford, 2008), see calc_hep_fu.
3: In calc_ma(chem.cas = chem.cas, chem.name = chem.name, dtxsid = dtxsid,  :
  Membrane affintity (MA) predicted with method of Yun and Edginton (2013), see calc_ma.
4: In get_fup(dtxsid = dtxsid, chem.name = chem.name, chem.cas = chem.cas,  :
  Fraction unbound is provided as a distribution.
5: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
6: In available_rblood2plasma(chem.cas = chem.cas, species = species,  :
  Human in vivo measured Rblood2plasma used.
7: In (function (Params = NULL, chem.cas = NULL, chem.name = NULL,  :
  Default value of 1.6 used for Caco2 permeability.
> calc_vdist(parameters=params)
Volume of distribution returned in units of L/kg BW.
[1] 2.325
> 
> parameterize_1comp(chem.name="Aminopterin")
Human volume of distribution returned in units of L/kg BW.
$BW
[1] 70

$Caco2.Pab
[1] 1.6

$Caco2.Pab.dist
[1] NA

$Clint
[1] 0

$Clint.dist
[1] NA

$Fabs
[1] 0.9378

$Fabsgut
[1] 0.8719

$Fgut
[1] 0.9297

$Fhep.assay.correction
[1] 0.9482

$Funbound.plasma
[1] 0.7498

$Funbound.plasma.adjustment
[1] 0.9998

$Funbound.plasma.dist
[1] NA

$hematocrit
[1] 0.44

$hepatic.bioavailability
[1] 1

$kelim
[1] 0.1346

$kgutabs
[1] 2.18

$liver.density
[1] 1.05

$MA
[1] 7.082

$million.cells.per.gliver
[1] 110

$MW
[1] 440.4

$pKa_Accept
pKa_Accept 
    "8.09" 

$pKa_Donor
pKa_Donor 
   "2.81" 

$plasma.vol
[1] 0.04286

$Pow
[1] 0.03467

$Rblood2plasma
[1] 0.8046

$Vdist
[1] 0.5966

Warning messages:
1: In calc_ma(chem.cas = chem.cas, chem.name = chem.name, dtxsid = dtxsid,  :
  Membrane affintity (MA) predicted with method of Yun and Edginton (2013), see calc_ma.
2: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
3: In calc_ma(chem.cas = chem.cas, chem.name = chem.name, dtxsid = dtxsid,  :
  Membrane affintity (MA) predicted with method of Yun and Edginton (2013), see calc_ma.
4: In apply_fup_adjustment(fup.point, fup.correction = fup.adjustment,  :
  Fup adjusted for in vivo lipid partitioning (Pearce, 2017), see calc_fup_correction.
5: In calc_rblood2plasma(chem.cas = chem.cas, species = species, adjusted.Funbound.plasma = adjusted.Funbound.plasma,  :
  Rblood2plasma has been recalculated.
6: In available_rblood2plasma(chem.cas = chem.cas, chem.name = chem.name,  :
  Human Rblood2plasma calculated with calc_rblood2plasma.
> 
> quit("no")

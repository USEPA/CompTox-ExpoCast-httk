
R Under development (unstable) (2020-06-29 r78751) -- "Unsuffered Consequences"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #R CMD BATCH --no-timing --no-restore --no-save 1comp_test.R 1comp_test.Rout
> library(httk)
> options(warn=-1)
> 
> calc_analytic_css(chem.name="bisphenol a",model="1compartment")
Human volume of distribution returned in units of L/kg BW.
Plasma concentration returned in uM units.
[1] 1.462
> calc_analytic_css(chem.cas="80-05-7",model="1compartment")
Human volume of distribution returned in units of L/kg BW.
Plasma concentration returned in uM units.
[1] 1.462
> calc_analytic_css(parameters=parameterize_1comp(chem.cas="80-05-7"),model="1compartment")
Human volume of distribution returned in units of L/kg BW.
Plasma concentration returned in uM units.
[1] 1.462
> calc_analytic_css(chem.cas="80-05-7",model="1compartment",tissue="liver")
Human volume of distribution returned in units of L/kg BW.
Tissue concentration for liver returned in uM units.
[1] 26.8
> calc_analytic_css(chem.cas="80-05-7",model="1compartment",tissue="brain")
Human volume of distribution returned in units of L/kg BW.
Tissue concentration for brain returned in uM units.
[1] 8.539
> 
> head(solve_1comp(chem.name="bisphenol a"))
Human volume of distribution returned in units of L/kg BW.
Human amounts with units otherwise unspecified by compartment.units are 
returned in umol by default, and similarly concentrations default to
units of uM.
AUC is area under plasma concentration curve in uM*days units with Rblood2plasma = 0.79.
        time Agutlumen Ccompartment Ametabolized       AUC
[1,] 0.00000    272.80    0.0000000    0.000e+00 0.000e+00
[2,] 0.00001    272.60    0.0004448    4.150e-07 2.000e-09
[3,] 0.01042    158.20    0.3561000    3.777e-01 2.025e-03
[4,] 0.02083     91.71    0.5605000    1.287e+00 6.898e-03
[5,] 0.03125     53.18    0.6768000    2.499e+00 1.340e-02
[6,] 0.04167     30.83    0.7422000    3.884e+00 2.082e-02
> head(solve_1comp(chem.cas="80-05-7"))
Human volume of distribution returned in units of L/kg BW.
Human amounts with units otherwise unspecified by compartment.units are 
returned in umol by default, and similarly concentrations default to
units of uM.
AUC is area under plasma concentration curve in uM*days units with Rblood2plasma = 0.79.
        time Agutlumen Ccompartment Ametabolized       AUC
[1,] 0.00000    272.80    0.0000000    0.000e+00 0.000e+00
[2,] 0.00001    272.60    0.0004448    4.150e-07 2.000e-09
[3,] 0.01042    158.20    0.3561000    3.777e-01 2.025e-03
[4,] 0.02083     91.71    0.5605000    1.287e+00 6.898e-03
[5,] 0.03125     53.18    0.6768000    2.499e+00 1.340e-02
[6,] 0.04167     30.83    0.7422000    3.884e+00 2.082e-02
> head(solve_1comp(parameters=parameterize_1comp(chem.cas="80-05-7")))
Human volume of distribution returned in units of L/kg BW.
Human amounts with units otherwise unspecified by compartment.units are 
returned in umol by default, and similarly concentrations default to
units of uM.
AUC is area under plasma concentration curve in uM*days units with Rblood2plasma = 0.79.
        time Agutlumen Ccompartment Ametabolized       AUC
[1,] 0.00000    272.80    0.0000000    0.000e+00 0.000e+00
[2,] 0.00001    272.60    0.0004448    4.150e-07 2.000e-09
[3,] 0.01042    158.20    0.3561000    3.777e-01 2.025e-03
[4,] 0.02083     91.71    0.5605000    1.287e+00 6.898e-03
[5,] 0.03125     53.18    0.6768000    2.499e+00 1.340e-02
[6,] 0.04167     30.83    0.7422000    3.884e+00 2.082e-02
> 
> calc_vdist(chem.name="triclosan")
Human volume of distribution returned in units of L/kg BW.
[1] 2.018
> calc_vdist(chem.cas="80-05-7")
Human volume of distribution returned in units of L/kg BW.
[1] 4.582
> params <- parameterize_schmitt(chem.name="triclosan")
> params <- c(params, predict_partitioning_schmitt(parameters = params))
> calc_vdist(parameters=params)
Volume of distribution returned in units of L/kg BW.
[1] 2.018
> params <- parameterize_3comp(chem.name="triclosan")
> calc_vdist(parameters=params)
Volume of distribution returned in units of L/kg BW.
[1] 2.018
> params <- parameterize_pbtk(chem.name="triclosan")
> calc_vdist(parameters=params)
Volume of distribution returned in units of L/kg BW.
[1] 2.019
> 
> script.args <- commandArgs(TRUE)
> if (length(script.args) > 0) 
+ {
+   if (any(script.args=="mctest"))
+   {
+     set.seed(12345)
+     calc_mc_css(chem.name="bisphenol a",model="1compartment")
+     set.seed(12345)
+     calc_mc_css(chem.cas="80-05-7",model="1compartment")
+     set.seed(12345)
+     calc_mc_css(parameters=parameterize_1comp(chem.cas="80-05-7"),model="1compartment")
+   }
+   if (any(script.args=="wetmoretest"))
+   {
+     wetmore.chems <- subset(chem.physical_and_invitro.data,
+       regexpr("Wetmore",Human.Clint.Reference)!=-1 &
+       regexpr("Wetmore",Human.Funbound.plasma.Reference)!=-1)
+     Css.table <- data.frame()
+     for (this.cas in sort(get_lit_cheminfo()))
+       if (this.cas %in% get_cheminfo(model="pbtk") &
+         this.cas %in% wetmore.chems$CAS)
+       {
+         Css.table[this.cas,"Css.lit"] <- get_lit_css(chem.cas=this.cas,
+           output.units="uM",
+           which.quantile=0.5)
+         Css.table[this.cas,"Css.calc"] <- calc_analytic_css(chem.cas=this.cas,
+           model="1compartment")
+       }                                                                          
+     cat(lm(log(Css.lit)~log(Css.calc),data=Css.table)$coefficients)
+    
+     #library(ggplot2)
+     #test.fig <- ggplot(Css.table,aes(x=Css.calc,y=Css.lit)) +
+     #         geom_point(size=3)+
+     #   scale_y_log10()+
+     #   scale_x_log10()+
+     #  ylab(expression(paste(C[aa]," Literature (uM)"))) +
+     #  xlab(expression(paste(C[aa]," 1compartment model (uM)"))) +
+     #  geom_abline(intercept = 0, slope = 1,linetype="dashed", colour="Blue") 
+     #
+     #dev.new()
+     #print(test.fig)
+   }
+ }
> 
> quit("no")

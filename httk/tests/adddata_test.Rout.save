
R version 4.0.3 (2020-10-10) -- "Bunny-Wunnies Freak Out"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #R CMD BATCH --no-timing --no-restore --no-save adddata_test.R adddata_test.Rout
> library(httk)
> 
> # Number of chemicals distributed with the package:
> num.chems <- length(get_cheminfo())
> 
> fake <- data.frame(Compound="Tester",
+                    CASRN="222-11-1",
+                    DTXSID="DTX111222",
+                    MW=200,
+                    logP=3.5,
+                    Fup=0.1,
+                    Clint=0.1,
+                    Clint.pValue=0.001,stringsAsFactors=FALSE)
> 
> chem.physical_and_invitro.data <- add_chemtable(
+   fake,
+   current.table=chem.physical_and_invitro.data,
+   data.list=list(
+     Compound="Compound",
+     CAS="CASRN",
+     DTXSID="DTXSID",
+     MW="MW",
+     logP="logP",
+     Funbound.plasma="Fup",
+     Clint="Clint",
+     Clint.pValue="Clint.pValue"),
+   species="Human",
+   reference="Fake")
> 
> calc_css(chem.name="Tester")
$avg
[1] 50.77

$frac
[1] 0.9874

$max
[1] 51.33

$the.day
[1] 29

Warning messages:
1: In predict_partitioning_schmitt(parameters = schmitt.params, species = species,  :
  Membrane affintity (MA) predicted with method of Yun and Edginton (2013)
2: In parameterize_pbtk(chem.cas = NULL, chem.name = "Tester", dtxsid = NULL,  :
  Funbound.plasma adjusted for in vitro partioning (Pearce, 2017).
3: In calc_rblood2plasma(chem.cas = chem.cas, species = species, adjusted.Funbound.plasma = adjusted.Funbound.plasma,  :
  Rblood2plasma has been recalculated.
4: In available_rblood2plasma(chem.cas = chem.cas, species = species,  :
  Human Rblood2plasma calculated with calc_rblood2plasma.
5: In solve_model(parameters = parameters, model = model, initial.values = Final_Conc[state.vars],  :
  No units were specified for the provided initial values. Assume initial values are in default model units:
    Agutlumen = umol
    Agut = umol
    Aliver = umol
    Aven = umol
    Alung = umol
    Aart = umol
    Arest = umol
    Akidney = umol
    Atubules = umol
    Ametabolized = umol
    AUC = uM*days
> 
> #load_sipes2017()
> 
> # We should have the ADMet Predicted chemicals from Sipes et al. (2017),
> # this one is a good test since the logP is nearly 10!
> #calc_css(chem.cas="26040-51-7")
> 
> #Let's see how many chemicals we have now with the Sipes (2017) data loaded)=:
> #length(get_cheminfo())
> 
> #Now let's reset
> reset_httk()
> 
> # We should be back to our original number:
> num.chems == length(get_cheminfo())
[1] TRUE
> 
> quit("no")
> proc.time()
   user  system elapsed 
   6.70    1.85    8.57 

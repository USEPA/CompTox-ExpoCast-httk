
R Under development (unstable) (2020-06-29 r78751) -- "Unsuffered Consequences"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #R CMD BATCH --no-timing --no-restore --no-save 3comp_test.R 3comp_test.Rout
> library(httk)
> options(warn=-1)
> 
> calc_analytic_css(chem.name="bisphenol a",model="3compartment")
Plasma concentration returned in uM units.
[1] 1.488
> calc_analytic_css(chem.cas="80-05-7",model="3compartment")
Plasma concentration returned in uM units.
[1] 1.488
> calc_analytic_css(parameters=parameterize_3comp(chem.cas="80-05-7"),model="3compartment")
Plasma concentration returned in uM units.
[1] 1.488
> calc_analytic_css(chem.name="bisphenol a",model="3compartment",tissue="liver")
Tissue concentration for liver returned in uM units.
[1] 27.06
> calc_analytic_css(chem.name="bisphenol a",model="3compartment",tissue="brain")
Tissue concentration for brain returned in uM units.
[1] 8.577
> 
> head(solve_3comp(chem.name="bisphenol a"))
Human amounts returned in umol and concentration returned in uM units.
AUC is area under plasma concentration in uM * days units with 
Rblood2plasma = 0.79.
        time Aintestine    Cliver  Csyscomp Atubules Ametabolized      AUC
[1,] 0.00000     306.60  0.000000 0.000e+00  0.00000    0.000e+00 0.000000
[2,] 0.00001     306.50  0.001995 3.200e-08  0.00000    7.400e-08 0.000000
[3,] 0.01042     177.80 35.570000 1.135e+00  0.01095    2.829e+00 0.004608
[4,] 0.02083     103.10 32.210000 2.532e+00  0.05723    6.849e+00 0.024090
[5,] 0.03125      59.78 26.200000 3.449e+00  0.13220    1.022e+01 0.055640
[6,] 0.04167      34.66 22.030000 3.986e+00  0.22480    1.299e+01 0.094620
       Cplasma
[1,] 0.000e+00
[2,] 3.200e-08
[3,] 1.135e+00
[4,] 2.532e+00
[5,] 3.449e+00
[6,] 3.986e+00
> head(solve_3comp(chem.cas="80-05-7"))
Human amounts returned in umol and concentration returned in uM units.
AUC is area under plasma concentration in uM * days units with 
Rblood2plasma = 0.79.
        time Aintestine    Cliver  Csyscomp Atubules Ametabolized      AUC
[1,] 0.00000     306.60  0.000000 0.000e+00  0.00000    0.000e+00 0.000000
[2,] 0.00001     306.50  0.001995 3.200e-08  0.00000    7.400e-08 0.000000
[3,] 0.01042     177.80 35.570000 1.135e+00  0.01095    2.829e+00 0.004608
[4,] 0.02083     103.10 32.210000 2.532e+00  0.05723    6.849e+00 0.024090
[5,] 0.03125      59.78 26.200000 3.449e+00  0.13220    1.022e+01 0.055640
[6,] 0.04167      34.66 22.030000 3.986e+00  0.22480    1.299e+01 0.094620
       Cplasma
[1,] 0.000e+00
[2,] 3.200e-08
[3,] 1.135e+00
[4,] 2.532e+00
[5,] 3.449e+00
[6,] 3.986e+00
> head(solve_3comp(parameters=parameterize_3comp(chem.cas="80-05-7")))
Amounts returned in umol  and concentration returned in uM units.
AUC is area under plasma concentration in uM * days units with 
Rblood2plasma = 0.79.
        time Aintestine    Cliver  Csyscomp Atubules Ametabolized      AUC
[1,] 0.00000     306.60  0.000000 0.000e+00  0.00000    0.000e+00 0.000000
[2,] 0.00001     306.50  0.001995 3.200e-08  0.00000    7.400e-08 0.000000
[3,] 0.01042     177.80 35.570000 1.135e+00  0.01095    2.829e+00 0.004608
[4,] 0.02083     103.10 32.210000 2.532e+00  0.05723    6.849e+00 0.024090
[5,] 0.03125      59.78 26.200000 3.449e+00  0.13220    1.022e+01 0.055640
[6,] 0.04167      34.66 22.030000 3.986e+00  0.22480    1.299e+01 0.094620
       Cplasma
[1,] 0.000e+00
[2,] 3.200e-08
[3,] 1.135e+00
[4,] 2.532e+00
[5,] 3.449e+00
[6,] 3.986e+00
> 
> #Test that the input daily.dose and doses.per.day are all that goes through, 
> #excluding any default dosing. We want any specified dosing to take the place
> #of the default, not add to it.
> 
> #first get BW param for 3 comp model:
> BW = parameterize_3comp(chem.name = 'bisphenol a')[['BW']]
> #and get MW of bisphenol a for checking units
> MW = get_physchem_param(param = "MW",chem.name = "bisphenol a")
> #record intended default dosing in solve_model when no other dosing specified:
> default_initial_dose_target_unscaled = 1 #mg/kg BW
> initial_default_dose_target = default_initial_dose_target_unscaled*
+   BW/(MW*10^-3) #factor of 10^-3 to convert 
> #from g/mol to mg/umol, yielding a dose target in umol
> head(initial_default_dose_target)
[1] 306.6262
> 
> out_default_dosing = solve_3comp(chem.name = "bisphenol a")
Human amounts returned in umol and concentration returned in uM units.
AUC is area under plasma concentration in uM * days units with 
Rblood2plasma = 0.79.
> #The following two initial dose metrics should be the same, and the same as
> #the initial_default_dose_target in turn.
> initial_default_dose = sum(out_default_dosing[1,])
> head(initial_default_dose)
[1] 306.6
> initial_default_dose_intestine = out_default_dosing[1,"Aintestine"]
> head(initial_default_dose_intestine)
Aintestine 
     306.6 
> 
> out_nondefault_dosing = solve_3comp(chem.name = "bisphenol a", 
+                                     daily.dose =3,doses.per.day = 5)
Human amounts returned in umol and concentration returned in uM units.
AUC is area under plasma concentration in uM * days units with 
Rblood2plasma = 0.79.
> #so, the dose target of what should appear at time zero in the intestine is:
> initial_nondefault_dose_target = 3/5*BW/(MW*10^-3)
> head(initial_nondefault_dose_target)
[1] 183.9757
> 
> #the following two dose metrics should also be the same:
> initial_nondefault_dose = sum(out_nondefault_dosing[2,]) #Use second row because
> #it looks like eventdata only gets registered in the output after time zero.
> head(initial_nondefault_dose)
[1] 183.9012
> initial_nondefault_dose_intestine = out_nondefault_dosing[2,"Aintestine"]
> head(initial_nondefault_dose_intestine)
Aintestine 
     183.9 
> 
> 
> script.args <- commandArgs(TRUE)
> if (length(script.args) > 0) 
+ {
+   if (any(script.args=="mctest"))
+   {
+     set.seed(12345)
+     calc_mc_css(chem.name="bisphenol a",model="3compartment")
+     set.seed(12345)
+     calc_mc_css(chem.cas="80-05-7",model="3compartment")
+     set.seed(12345)
+     calc_mc_css(parameters=parameterize_3comp(chem.cas="80-05-7"),model="3compartment")
+   }                                            
+   if (any(script.args=="wetmoretest"))
+   {
+     wetmore.chems <- subset(chem.physical_and_invitro.data,
+       regexpr("Wetmore",Human.Clint.Reference)!=-1 &
+       regexpr("Wetmore",Human.Funbound.plasma.Reference)!=-1)
+     Css.table <- data.frame()
+     for (this.cas in sort(get_lit_cheminfo()))
+       if (this.cas %in% get_cheminfo(model="pbtk") &
+         this.cas %in% wetmore.chems$CAS)
+       {
+         Css.table[this.cas,"Css.lit"] <- get_lit_css(chem.cas=this.cas,
+           output.units="uM",
+           which.quantile=0.5)
+         Css.table[this.cas,"Css.calc"] <- calc_analytic_css(chem.cas=this.cas,
+           model="3compartment")
+       }                                                                          
+     cat(lm(log(Css.lit)~log(Css.calc),data=Css.table)$coefficients)
+       
+     #library(ggplot2)
+     #test.fig <- ggplot(Css.table,aes(x=Css.calc,y=Css.lit)) +
+     #         geom_point(size=3)+
+     #   scale_y_log10()+
+     #   scale_x_log10()+
+     #  ylab(expression(paste(C[aa]," Literature (uM)"))) +
+     #  xlab(expression(paste(C[aa]," 3compartment model (uM)"))) +
+     #  geom_abline(intercept = 0, slope = 1,linetype="dashed", colour="Blue") 
+     #
+     #dev.new()
+     #print(test.fig)
+   }
+ }
> 
> 
> 
> quit("no")
